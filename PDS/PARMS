         TITLE 'SCAN CONTROL CARDS.'
PARMS    $PROLOG R12
         L     R4,=V(DATASECT)
         USING DATASECT,R4
         OPEN  (SYSIN,INPUT)
         TM    SYSIN+48,X'10'      DID SYSIN DCB OPEN?
         BZ    PARM99              IF SYSIN NOT SUPPLIED, DEFAULT.
PARMS1   GET   SYSIN,CARD
         LA    R2,CARD             CARD IMAGE TO PRINT.
         LM    R15,R1,=A(MESGRTN,0,8)                              @130
         BASR  R14,R15             MESSAGE 8. PRINT CARD IMAGE.    @130
         LA    R3,CARD             ADDRESS OF PARAMETER CARD.
         LA    R11,1               SCAN 1 BYTE AT A TIME.
         LR    R5,R3               START OF CARD
         LA    R5,72(,R5)          PLUS 72 BYTES IS SCAN LIMIT.
PARMS2   DS    0H
         CLC   =C'LEVEL(',0(R3)    LEVEL IDENTIFIERS FOLLOW.
         BE    PARMS5              PROCESS SCANNED PARM VALUE.
         CLC   =C'NOLEVEL(',0(R3)  NOLEVEL IDENTIFIERS FOLLOW.
         BE    PARMS6              PROCESS SCANNED PARM VALUE.
         CLC   =C'VOLUME(',0(R3)   VOLSERS TO SELECT FROM.
         BE    PARMS7              PROCESS SCANNED PARM VALUE.
         CLC   =C'NOVOLUME(',0(R3)  VOLSER NOT TO SELECT FROM.
         BE    PARMS8              PROCESS SCANNED PARM VALUE.
         CLC   =C'TAPE.',0(R3)     SELECT TAPE DATASETS.
         BE    PARMSB              PROCESS SCANNED PARM VALUE.
         CLC   =C'NOTAPE.',0(R3)   DON'T SELECT TAPE DATASETS.
         BE    PARMSC              PROCESS SCANNED PARM VALUE.
         CLC   =C'DASD.',0(R3)     SELECT DASD DATASETS.
         BE    PARMSF              PROCESS SCANNED PARM VALUE.
         CLC   =C'NODASD.',0(R3)   DON'T SELECT DASD DATASETS.
         BE    PARMSG              PROCESS SCANNED PARM VALUE.
         CLC   =C'CONTAINING(',0(R3) SCAN DSNAME FOR STRING?
         BE    PARMSM              YES.
         CLC   =C'ENDING(',0(R3)   SELECT DSNAMES BY ENDING.
         BE    PARMSN              YES.
         CLC   =C'NOTCONTAINING(',0(R3) EXCLUDE BY CONTENTS.
         BE    PARMSO              YES.
         CLC   =C'NOTENDING(',0(R3) EXCLUDE DSNAMES BY ENDING
         BE    PARMSP              YES.
         SPACE ,
         CLC   =C'DUMP.',0(R3)     HEX LISTING WANTED?             @130
         BE    PARMSD              YES.                            @130
         SPACE ,
         CLC   =C'BREAKLEVEL.',0(R3)
         BE    PARMSBL             BREAK ON LEVEL WANTED.
         SPACE ,
PARMSL1  BXLE  R3,R11,PARMS2       SCAN THE WHOLE CARD.
         B     PARMS1              READ ANOTHER CARD.
PARMS5   OI    FLAGS1,LEVEL        INDICATE LEVEL WANTED.
         LA    R8,9                LENGTH OF A LEVEL
         LA    R3,6(,R3)           SKIP OVER 'LEVEL('
         LA    R7,LTAB             ADDR OF LEVEL TABLE.
         B     BLDTAB              GOTO BUILD SUBLIST TABLE.
PARMS6   OI    FLAGS1,NOLEVEL      INDICATE NOLEVEL WANTED.
         LA    R8,9                LENGTH OF A LEVEL
         LA    R3,8(,R3)           SKIP OVER 'NOLEVEL('
         LA    R7,NLTAB            ADDR OF NOLEVEL TABLE.
         B     BLDTAB              GOTO BUILD SUBLIST TABLE.
PARMS7   OI    FLAGS2,VOLUME       INDICATE VOLUME WANTED.
         LA    R8,7                LENGTH OF A VOLUME
         LA    R3,7(,R3)           SKIP OVER 'VOLUME('
         LA    R7,VTAB             ADDR OF VOLUME TABLE.
         B     BLDTAB              GOTO BUILD SUBLIST TABLE.
PARMS8   OI    FLAGS2,NOVOLUME     INDICATE NOVOLUME WANTED.
         LA    R8,7                LENGTH OF A VOLUME
         LA    R3,9(,R3)           SKIP OVER 'NOVOLUME('
         LA    R7,NVTAB            ADDR OF NOVOLUME TABLE.
         B     BLDTAB              GOTO BUILD SUBLIST TABLE.
PARMSB   OI    FLAGS1,TAPE         INDICATE TAPE WANTED.
         B     PARMSL1             CONTINUE SCAN.
PARMSC   NI    FLAGS1,NOTAPE       INDICATE TAPE NOT WANTED.
         LA    R3,3(,R3)           SKIP OVER 'NO'
         B     PARMSL1             CONTINUE SCAN.
         SPACE ,
PARMSD   OI    FLAGS1,DUMP         HEX LISTING WANTED.             @130
         B     PARMSL1             CONTINUE SCAN.                  @130
         SPACE ,
PARMSF   OI    FLAGS1,DASD         INDICATE DASD WANTED.
         B     PARMSL1             CONTINUE SCAN.
PARMSG   NI    FLAGS1,NODASD       INDICATE DASD NOT WANTED.
         LA    R3,3(,R3)           SKIP OVER 'NO'
         B     PARMSL1             CONTINUE SCAN.
         SPACE ,
PARMSM   OI    FLAGS3,CONTAIN      SAY SCAN DSNAME FOR STRINGS.
         LA    R3,11(0,R3)         SKIP OVER CONTAINING(
         LA    R8,9                8 CHARACTER SEARCH ARGS.
         LA    R7,CTAB             ARG TABLE.
         B     BLDTAB              GO EXTRACT SEARCH STRING.
PARMSN   OI    FLAGS3,ENDING       SAY SELECT BY ENDING.
         LA    R3,7(0,R3)          SKIP OVER ENDING(
         LA    R8,9                8 CHARACTER ENDING ARGS.
         LA    R7,ETAB             ARG TABLE.
         B     BLDTAB              GO EXTRACT ENDING STRING.
PARMSO   OI    FLAGS3,NOTCONT      SAY SCAN DSNAME FOR STRINGS.
         LA    R3,14(0,R3)         SKIP OVER NOTCONTAINING(
         LA    R8,9                8 CHARACTER SEARCH ARGS.
         LA    R7,NCTAB            ARG TABLE.
         B     BLDTAB              GO EXTRACT SEARCH STRING.
PARMSP   OI    FLAGS3,NOTEND       SAY EXCLUDE BY ENDING.
         LA    R3,10(0,R3)         SKIP OVER NOTENDING(
         LA    R8,9                8 CHARACTER ENDING ARGS.
         LA    R7,NETAB            ARG TABLE.
         B     BLDTAB              GO EXTRACT ENDING STRING.
PARMSBL  OI    FLAGS2,BRKLVL       PAGE EJECT EACH HI-LVL QUAL.
         B     PARMSL1             CONTINUE SCAN.
         SPACE ,
BLDTAB   SR    R1,R1               R1 WILL BE ADDR OF SCANNED CHAR.
         SR    R2,R2               R2 WILL CONTAIN SCANNED CHAR.
BLDTAB1  TRT   0(9,R3),SCANTAB     SCAN FOR ) OR ,
         LTR   R1,R1               DELIMITER FOUND
         BZ    SUBLERR             NO, SYNATX ERROR IN SUBLIST.
         CLC   0(2,R1),=C', '      END OF CARD?
         BE    BLDTAB9             YES
         LR    R15,R1              ADDR OF SCANNED DELIMITER.
         SR    R15,R3              R15 -> LENGTH OF SUBLIST ELEMENT
         STC   R15,0(,R7)          SAVE IT
         BCTR  R15,0               MINUS 1 FOR EX.
         EX    R15,BLDMVC          STORE MESSAGE ID.
         CLI   0(R1),C')'          END OF SUBLIST?
         BNE   BLDTAB2             NO, SKIP END OF TABLE.
         AR    R7,R8               SPAN OVER LAST ELEMENT.
         MVI   0(R7),255           SET END OF TABLE.
         B     PARMSL1             KEEP ON SCANNING
BLDTAB2  LA    R15,1(,R15)         ADD 1 AFTER EX.
         AR    R3,R15              SKIP OVER MESSAGE ID.
         AR    R7,R8               NEXT TABLE ENTRY.
         BXLE  R3,R11,BLDTAB1      FIND NEXT MESSAGE.
BLDTAB9  GET   SYSIN,CARD
         LA    R3,CARD             START OF CARD
         LA    R11,1               SCAN 1 COLUMN AT A TIME.
         LR    R5,R3               START OF CARD
         LA    R5,72(,R5)          PLUS 72 IS LAST COLUMN TO SCAN.
         TRT   0(72,R3),ALPHTAB    SCAN TO 1ST APHAMERIC CHARACTER.
         BZ    SUBLERR             SUBLIST ERROR IF NONE FOUND.
         LR    R3,R1               R1 -> 1ST ALPHA CHARACTER.
         B     BLDTAB1             RESUME DECODING OF SUBLIST ELEME
SUBLERR  ABEND 98,DUMP
BLDMVC   MVC   1(0,R7),0(R3)       SAVE A SUBLIST ITEM.
EODIN    DS    0H                                                  @130
         CLOSE (SYSIN)             ALL DONE. GET OUT.
PARM99   DS    0H
*       $CALL  OPTIONS
         SPACE ,
         $EPILOG ,
         LTORG ,
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=EODIN
         DS    0D
CARD     DC    CL80' '
         SPACE ,
SCANTAB  DS    0D
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'00000000000000000000000000000000'  0
         DC    X'00000000000000000000000000000000'  1
         DC    X'00000000000000000000000000000000'  2
         DC    X'00000000000000000000000000000000'  3
         DC    X'00000000000000000000000000000000'  4
         DC    X'00000000000000000000000000020000'  5
         DC    X'00000000000000000000000100000000'  6
         DC    X'00000000000000000000000000000000'  7
         DC    X'00000000000000000000000000000000'  8
         DC    X'00000000000000000000000000000000'  9
         DC    X'00000000000000000000000000000000'  A
         DC    X'00000000000000000000000000000000'  B
         DC    X'00000000000000000000000000000000'  C
         DC    X'00000000000000000000000000000000'  D
         DC    X'00000000000000000000000000000000'  E
         DC    X'00000000000000000000000000000000'  F
ALPHTAB  DS    0D
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'00000000000000000000000000000000'  0
         DC    X'00000000000000000000000000000000'  1
         DC    X'00000000000000000000000000000000'  2
         DC    X'00000000000000000000000000000000'  3
         DC    X'00000000000000000000000000000000'  4
         DC    X'0000000000000000000000FF00000000'  5
         DC    X'00000000000000000000000000000000'  6
         DC    X'00000000000000000000000000000000'  7
         DC    X'00000000000000000000000000000000'  8
         DC    X'00000000000000000000000000000000'  9
         DC    X'00000000000000000000000000000000'  A
         DC    X'00000000000000000000000000000000'  B
         DC    X'00FFFFFFFFFFFFFFFFFF000000000000'  C
         DC    X'00FFFFFFFFFFFFFFFFFF000000000000'  D
         DC    X'0000FFFFFFFFFFFFFFFF000000000000'  E
         DC    X'FFFFFFFFFFFFFFFFFFFF000000000000'  F
