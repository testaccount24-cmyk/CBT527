         TITLE ' - PRINT A HEX LISTING.'
*-------------------------------------------------------------*    @134
* EXIT FROM HERE IS BY EODAD TO EODICAT IN THE MAINLINE       *    @134
*-------------------------------------------------------------*    @134
HEXPRINT $PROLOG R10,R11,R12
         L     R4,=V(DATASECT)                                     @130
         USING DATASECT,R4                                         @130
         XPROPEN PWA,PAGELEN=PAGELEN,DDNAME=SYSPRINT
         LTR   R15,R15             DID SYSPRINT OPEN?
         BZ    HEXSYSOK            YES                             @134
         L     R15,=A(EODICAT)                                     @134
         BR    R15                 IF SYSPRINT DOESN'T OPEN        @134
HEXSYSOK DS    0H                                                  @134
         XPRHEAD PWA,LIST=(HEADER1,HEADER3)
         L     R15,=V(ALLVVDS)                                     @130
         BASR  R14,R15             ALLOCATE ALL VVDS'S             @130
*        LA    R0,1                AUTHORIZATION ON.
*        SVC   232                 **** INSTALLATION DEPENDANT ***
         SPACE ,
         L     R2,CVTPTR           A(CVT)
         L     R2,0(0,R2)          TCB WORDS
         L     R2,0(0,R2)          MY TCB.
         USING TCB,R2
         L     R2,TCBJSCB          TCB -> JSCB.
         DROP  R2
         USING IEZJSCB,R2
         L     R2,JSCBACT          ACTIVE JSCB.
         MODESET KEY=ZERO
         SPACE ,
*
* OPENING A CATALOG AS A DATASET SEEMS TO CAUSE PASSWORD PROMPTING
* EVEN FOR READING. HERE I SET THE BYPASS PASSWORD BIT TO GIVE OPER
* A BREAK.
*
         OI    JSCBSWT1,JSCBPASS
         SPACE ,
         MODESET KEY=NZERO
         OPEN  ACBICAT
*        SR    R0,R0               AUTHORIZATION OFF.
*        SVC   232                 **** INSTALLATION DEPENDANT ***
         L     R15,=A(GENRPL)                                      @134
         BASR  R9,R15              GENERATE RPL ADDR.              @134
GETNEXTH L     R1,RPLICAT          GET RPL ADDR.
         GET   RPL=(1)
         LTR   R15,R15             RECORD READ OK?
         BZ    HEXGETOK            YES                             @AVV
         ICM   R2,15,RPLFDBK-IFGRPL(R1) GET FEEDBACK FIELD.        @AVV
         ABEND 16,DUMP             DIE, SUCKER.                    @AVV
HEXGETOK DS    0H                                                  @AVV
         L     R3,BUFPTR           ADDR OF CATALOG RECORD
         L     R2,RPLICAT          GET RPL ADDR FROM LAST GET.
         L     R2,48(0,R2)         LENGTH OF RECORD READ
         AR    R2,R3               POINT TO END OF CATALOG RECORD
         LTR   R2,R2                                               @AVV
         BNP   GETNEXTH            SKIP A BOGUS RECORD.            @AVV
         ST    R2,ENDBCS           SAVE FOR FINDBCS ROUTINE
         LA    R3,2(,R3)           SKIP OVER PREFIX
HEXNEXT  CLI   2(R3),C'A'          A = NONVSAM
         BE    HEXNVSAM
         CLI   2(R3),C'C'          C = CLUSTER
         BE    HEXCLUST
         CLI   2(R3),C'D'          D = DATA COMPONENT
         BE    HEXDATA
         CLI   2(R3),C'I'          I = INDEX COMPONENT
         BE    HEXINDEX
ENDHEX   SR    R1,R1
         ICM   R1,3,0(R3)          PICK UP CELL LENGTH
         LTR   R1,R1                                               @AVV
         BNP   GETNEXTH            SKIP IF BOGUS LENGTH.           @AVV
         AR    R3,R1               POINT TO NEXT CELL
         C     R3,ENDBCS           ANY MORE CELLS IN THIS RECORD?
         BL    HEXNEXT             YES, KEEP GOING
         B     GETNEXTH            READ ANOTHER RECORD.
         TITLE ' - HEX PRINT A NONVSAM CELL.'
         USING NVNC,R3
HEXNVSAM MVC   L2TYPE,=CL7'NONVSAM'
         AP    CNTNVSAM,ONE        COUNT OFF A NONVSAM             @120
         HEX   L2WORK,NVCELEN,                                         X
               2,HEXTAB=TRHEX      LENGTH OF NVNC
         HEX   L2WORK+5,NVTYPE,                                        X
               1,HEXTAB=TRHEX      TYPE 'A' FOR NONVSAM
         HEX   L2WORK+8,NVRESV,                                        X
               1,HEXTAB=TRHEX      RESERVED
         HEX   L2WORK+11,NVOLCNT,                                      X
               2,HEXTAB=TRHEX      NUMBER OF VOLUME CELLS (255 MAX)
         HEX   L2WORK+16,NVKEYLN,                                      X
               1,HEXTAB=TRHEX      LENGTH OF THE NONVSAM KEY
         MVC   L2WORK+19(44),NVNAME
         LM    R0,R1,PLINE2A       PARMS TO SKIP BEFORE RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         BAS   R9,HEXOWNER         OWNER CELL NEXT.
         BAS   R9,HEXASSOC         ASSOCIATION (IF PRESENT).
         BAS   R9,HEXVOL           VOLUME CELL(S).
         B     ENDHEX
         DROP  R3
         TITLE ' - HEX PRINT A CLUSTER CELL.'
         USING VCNC,R3
HEXCLUST MVC   L2TYPE,=CL7'CLUSTER'
         AP    CNTCLUST,ONE        COUNT A CLUSTER                 @120
         HEX   L2WORK,CLCELLN,                                         X
               2,HEXTAB=TRHEX      LENGTH OF VCNC INCLUDING ITSELF
         HEX   L2WORK+5,CLTYPE,                                        X
               1,HEXTAB=TRHEX      TYPE 'C' FOR CLUSTER
         HEX   L2WORK+8,CLCOMPLN,                                      X
               2,HEXTAB=TRHEX      LENGTH OF THE CLUSTER COMPONENT
         HEX   L2WORK+13,CLNOEXT,                                      X
               1,HEXTAB=TRHEX      NUMBER OF EXTENSION RECORDS
         HEX   L2WORK+16,CLNMLEN,                                      X
               1,HEXTAB=TRHEX      LENGTH OF THE CLUSTER KEY (45)
         MVC   L2WORK+19(44),CLNAME
         LM    R0,R1,PLINE2A       PARMS TO SKIP BEFORE RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         BAS   R9,HEXOWNER         OWNER CELL NEXT.
         BAS   R9,HEXSECUR         SECURITY CELL (IF PRESENT).
         BAS   R9,HEXASSOC         ASSOCIATION (IF PRESENT).
         BAS   R9,HEXRELAT         RELATIONSHIP CELL (?)
         B     ENDHEX
         DROP  R3
         TITLE ' - HEX PRINT A DATA OR INDEX CELL.'
         USING DINC,R3
HEXDATA  MVC   L2TYPE,=CL7'DATA'
         AP    CNTDATA,ONE         COUNT IT                        @120
         B     HEXDATA1
HEXINDEX MVC   L2TYPE,=CL7'INDEX'
         AP    CNTINDEX,ONE        COUNT IT.                       @120
HEXDATA1 HEX   L2WORK,DIDLEN,                                          X
               2,HEXTAB=TRHEX      LENGTH OF DINC
         HEX   L2WORK+5,DIDTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE 'D' FOR DATA OR INDEX
         HEX   L2WORK+8,DIDCMPLN,                                      X
               2,HEXTAB=TRHEX      LENGTH OF DINC COMPONENT
         HEX   L2WORK+13,DIDIRFLG,                                     X
               1,HEXTAB=TRHEX      INTERRUPT RECOGNITION FLAGS
         HEX   L2WORK+16,DIDKEYLN,                                     X
               1,HEXTAB=TRHEX      CONDENSED KEYLENGTH
         SR    R1,R1
         ICM   R1,1,DIDKEYLN       GET LENGTH OF NAME KEY.
         B     *+10
         MVC   L2WORK+19(0),DIDKEY
         EX    R1,*-6              MOVE IN NAME KEY.
         B     *+10
         MVC   SVCOMPN(0),DIDKEY   SAVE COMPONENT NAME
         EX    R1,*-6              MOVE IN NAME KEY.
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         BAS   R9,HEXOWNER         OWNER CELL NEXT.
         BAS   R9,HEXSECUR         SECURITY CELL (IF PRESENT).
         BAS   R9,HEXVOL           VOLUME CELL(S).
         B     ENDHEX
         DROP  R3
         TITLE ' - HEX AN OWNER CELL.'
HEXOWNER $IN ,
         ICM   R0,1,=XL1'01'       OWNER CELL TYPE.
         L     R15,=V(FINDBCS)                                     @134
         BASR  R9,R15                                              @134
         USING OWNERC,R3
         MVC   L2TYPE,=CL7' OWNER'
         HEX   L2WORK,OWNCELLN,                                        X
               2,HEXTAB=TRHEX      LENGTH OF OWNERSHIP CELL
         HEX   L2WORK+5,OWNTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE X'01' FOR OWNER
         HEX   L2WORK+8,OWNID,                                         X
               4,HEXTAB=TRHEX      OWNER ID
         HEX   L2WORK+16,OWNID+4,                                      X
               4,HEXTAB=TRHEX      OWNER ID
         HEX   L2WORK+25,OWNFLAG,                                      X
               1,HEXTAB=TRHEX      FLAG
         HEX   L2WORK+28,OWNCREDT,                                     X
               3,HEXTAB=TRHEX      CREATION DATE
         HEX   L2WORK+35,OWNEXPDT,                                     X
               3,HEXTAB=TRHEX      EXPIRY DATE
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         $OUT  ,                   GET OUT.
         TITLE ' - HEX AN ASSOCIATION CELL.'
HEXASSOC $IN ,
         ICM   R0,3,=XL2'FF03'     TYPE X'03', OPTIONAL.
         L     R15,=V(FINDBCS)                                     @134
         BASR  R9,R15                                              @134
         LTR   R0,R0               SO WAS THERE?
         BZ    HEXASS99            NO.
         USING ASSOCC,R3
         MVC   L2TYPE,=CL7' ASSOC'
         HEX   L2WORK,ASCLEN,                                          X
               2,HEXTAB=TRHEX      ASSOCIATION CELL LENGTH
         HEX   L2WORK+5,ASCTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE X'03' FOR ASSOC
         HEX   L2WORK+8,ASCOUNT,                                       X
               2,HEXTAB=TRHEX      COUNT OF ASSOCIATIONS
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
HEXASS99 $OUT  ,                   GET OUT
         TITLE ' - HEX A SECURITY CELL.'
HEXSECUR $IN ,
         ICM   R0,3,=XL2'FF02'     TYPE X'02', OPTIONAL.
         L     R15,=V(FINDBCS)                                     @134
         BASR  R9,R15                                              @134
         LTR   R0,R0               SO WAS THERE?
         BZ    HEXSEC99            NO.
         USING SECURITY,R3
         MVC   L2TYPE,=CL7' SECUR'
         HEX   L2WORK,SECELLN,                                         X
               2,HEXTAB=TRHEX      LENGTH OF SECURITY CELL
         HEX   L2WORK+5,SECTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE X'02' FOR SECURITY.
         HEX   L2WORK+8,SECMSTR,                                       X
               4,HEXTAB=TRHEX      MASTER PASSWORD.
         HEX   L2WORK+16,                                              X
               SECMSTR+4,                                              X
               4,HEXTAB=TRHEX      MASTER PASSWORD.
         HEX   L2WORK+27,SECCI,                                        X
               4,HEXTAB=TRHEX      CONTROL INTERVAL PASSWORD.
         HEX   L2WORK+35,SECCI+4,                                      X
               4,HEXTAB=TRHEX      CONTROL INTERVAL PASSWORD.
         HEX   L2WORK+44,                                              X
               SECUPDTE,                                               X
               4,HEXTAB=TRHEX      UPDATE PASSWORD.
         HEX   L2WORK+52,                                              X
               SECUPDTE+4,                                             X
               4,HEXTAB=TRHEX      UPDATE PASSWORD.
         HEX   L2WORK+61,SECREAD,                                      X
               4,HEXTAB=TRHEX      READ PASSWORD.
         HEX   L2WORK+69,                                              X
               SECREAD+4,                                              X
               4,HEXTAB=TRHEX      READ PASSWORD.
         HEX   L2WORK+78,SECPMTCD,                                     X
               4,HEXTAB=TRHEX      PASSWORD PROMPTING CODE.
         HEX   L2WORK+86,                                              X
               SECPMTCD+4,                                             X
               4,HEXTAB=TRHEX      PASSWORD PROMPTING CODE.
         HEX   L2WORK+95,SECATMP,                                      X
               2,HEXTAB=TRHEX      MAXIMUM NUMBER OF ATTEMPTS.
         HEX   L2WORK+100,                                             X
               SECVRMOD,                                               X
               4,HEXTAB=TRHEX      USER SECURITY VERIFICATION MOD.
         HEX   L2WORK+108,                                             X
               SECVRMOD+4,                                             X
               4,HEXTAB=TRHEX      USER SECURITY VERIFICATION MOD.
         HEX   L2WORK+117,                                             X
               SECRCDLN,                                               X
               2,HEXTAB=TRHEX      USER AUTHORIZATION RECORD LENGTH
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
HEXSEC99 $OUT  ,                   GET OUT
         TITLE ' - HEX A RELATION CELL.'
HEXRELAT $IN ,
         ICM   R0,3,=XL2'FF06'     OPTIONAL RELAT CELL
         L     R15,=V(FINDBCS)                                     @134
         BASR  R9,R15                                              @134
         LTR   R0,R0               WAS IT THERE?
         BZ    HEXREL99            NO.
         USING RELCELL,R3
         MVC   L2TYPE,=CL7' RELAT'
         HEX   L2WORK,RELLEN,                                          X
               2,HEXTAB=TRHEX      CELL LENGTH.
         HEX   L2WORK+5,RELTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE X'06'
         HEX   L2WORK+8,RELRESV,                                       X
               1,HEXTAB=TRHEX      RESERVED.
         HEX   L2WORK+11,RELCNT,                                       X
               1,HEXTAB=TRHEX      COUNT OF RELKEYS.
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
HEXREL99 $OUT  ,                   GET OUT
         TITLE ' - HEX A VOLUME CELL.'
* THIS LOGIC IS ENTERED AT A POINT WHERE THERE MUST BE AT LEAST ONE
* VOLUME CELL POINTED TO BY R3. HOWEVER THERE COULD BE MORE THAN ONE.
* HENCE, AFTER THE FIRST NON-VOLUME CELL IS RECOGNIZED R3 MUST BE
* BACKED UP TO THE LAST VOLUME CELL SO THAT THE GENERAL CODE AT
* "ENDHEX" CAN SKIP OVER IT.
HEXVOL   $IN ,
HEXVOL0  ICM   R0,3,=XL2'FF04'     VOLUME CELL
         L     R15,=V(FINDBCS)                                     @134
         BASR  R9,R15                                              @134
         LTR   R0,R0               WAS THAT THE LAST ONE?
         BZ    HEXVOL99            YES.
         USING VOLCELL,R3
         MVC   L2TYPE,=CL7' VOLUME'
         HEX   L2WORK,VOLLEN,                                          X
               2,HEXTAB=TRHEX      LENGTH OF VOLCELL
         HEX   L2WORK+5,VOLTYPE,                                       X
               1,HEXTAB=TRHEX      TYPE X'04' FOR VOLUME CELL
         HEX   L2WORK+8,VOLOFSET,                                      X
               1,HEXTAB=TRHEX      UNUSED
         MVC   L2WORK+11(6),VOLSERN
         HEX   L2WORK+18,VOLDEVTP,                                     X
               4,HEXTAB=TRHEX      DEVICE TYPE
         HEX   L2WORK+27,VOLFLAG1,                                     X
               1,HEXTAB=TRHEX      FLAG
         HEX   L2WORK+30,VOLFLAG2,                                     X
               1,HEXTAB=TRHEX      RESERVED
         HEX   L2WORK+33,VOLVVRBA,                                     X
               4,HEXTAB=TRHEX      RELATIVE BYTE ADDRESS OF VVR
         HEX   L2WORK+42,VOLFLSEQ,                                     X
               2,HEXTAB=TRHEX      NONVSAM FILE SEQUENCE NUMBER (TAPE)
         HEX   L2WORK+47,VOLKRQL,                                      X
               4,HEXTAB=TRHEX      KEYRANGE QUALIFIER (VSAM ONLY)
         HEX   L2WORK+56,VOLLKYLN,                                     X
               2,HEXTAB=TRHEX      LENGTH OF LOW KEY RANGE KEY
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         TM    VOLFLAG1,VOLNVSAM   IS IT NONVSAM?
         BO    HEXVOL99            IF SO, THAT'S ALL
         TM    VOLFLAG1,VOLCANDI   IS IT A CANDIDATE VOLUME?
         BO    HEXVOL99            IF SO, THAT'S ALL
         MVC   RBASAVE,VOLVVRBA    SAVE RBA OF VVR
         L     R5,VVDSTAD          GET VVDSTAB START ADDR
         USING VVDSTAB,R5
HEXVOL8  CLI   VVDSVOL,255         LAST ENTRY?
         BE    HEXVOL99            YES, OH WELL.
         CLC   VVDSVOL,VOLSERN     IS THIS THE VVDS?
         BNE   HEXVOL6             NO, TRY AGAIN
         ICM   R1,15,RBASAVE       GET VVR RBA
         STCM  R1,15,VVDSARG       INSERT TO ARG FIELD FOR THIS RPL
         ICM   R8,15,VVDSRPL       PICK UP RPL ADDR
         POINT RPL=(8)             POSITION TO DESIRED RECORD
         GET   RPL=(8)             READ IN RECORD
         LTR   R15,R15             RECORD READ OK?
         L     R6,VVDSBUF          ADDR OF CATALOG RECORD
         L     R1,VVDSRPL          GET ADDR OF RPL
         L     R1,48(0,R1)         LENGTH OF RECORD READ
         AR    R1,R6               POINT TO END OF CATALOG RECORD
         ST    R1,ENDVVD           SAVE END OF RECORD ADDR
         LA    R6,2(,R6)           SKIP OVER PREFIX
         BAS   R9,HEXVVR           PRIMARY OR 2NDARY VVR
         BAS   R9,HEXDSINF         DATASET INFORMATION CELL (MAYBE)
         BAS   R9,HEXAMDSB         AMDSB CELL (IF PRESENT)
         BAS   R9,HEXVOLIN         VOLUME INFORMATION CELL.
         B     HEXVOL0             COULD BE MORE THAN ONE.
HEXVOL6  LA    R5,VVDSTLEN(0,R5)   NEXT ENTRY
         B     HEXVOL8             WHAT IS IT JOHNNY?
HEXVOL99 $OUT  ,                   GET OUT.
         DROP  R3
         TITLE ' - HEX PRINT A VVR.'
* I ENTER AT THIS POINT HAVING READ IN THE 1ST RECORD IN THE CI
* CONTAINING THE DATA I WANT. FIRSTLY I HAVE TO SKIP AHEAD TO FIND
* THE VVR FOR THE OBJECT I AM LISTING (NB: THE FIRST VVR I FIND MAY
* NOT BE IT, IE. A DATA VVR IF I'M LISTING AN INDEX).
         USING VVR,R6
HEXVVR   $IN ,
         MVC   L2TYPE,=CL7' VVR'
HEXVVR0  CLI   2(R6),C'Q'          Q = SECONDARY VVR
         BE    HEXVVR0B            YES, IS IT THE RIGHT ONE?
         CLI   2(R6),C'Z'          Z = PRIMARY VVR
         BE    HEXVVR0B            YES, IS IT THE RIGHT ONE?
HEXVVR0A XC    VVD0,VVD0           NEXT CELL PLEASE.               @134
         L     R15,=V(FINDVVDS)                                    @134
         BASR  R14,R15             SCAN VVDS                       @134
         B     HEXVVR0             IS IT A VVR?
HEXVVR0B SR    R1,R1
         ICM   R1,1,VVRCMPNL       PICK UP NAME LENGTH.
         BCTR  R1,0
         BCTR  R1,0
         B     HEXVVR0C
         CLC   SVCOMPN(0),VVRCMPNM  (EXECUTED)
HEXVVR0C EX    R1,*-6              COMPARE VVR NAME TO BCS NAME.
         BNE   HEXVVR0A            NO, MUST BE A RELATED COMPONENT.
         HEX   L2WORK,VVRHDLEN,                                        X
               2,HEXTAB=TRHEX
         HEX   L2WORK+5,VVRTYPE,                                       X
               1,HEXTAB=TRHEX
         HEX   L2WORK+8,VVRFLAG,                                       X
               1,HEXTAB=TRHEX
         HEX   L2WORK+11,VVRKRQ,                                       X
               4,HEXTAB=TRHEX
         HEX   L2WORK+20,VVRCMPNL,                                     X
               1,HEXTAB=TRHEX
         SR    R1,R1
         ICM   R1,1,VVRCMPNL       GET LENGTH OF COMPONENT KEY.
         B     *+10
         MVC   L2WORK+23(0),VVRCMPNM
         EX    R1,*-6              MOVE IN COMPONENT KEY.
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         $OUT  ,                   GET OUT.
         DROP  R6
         TITLE ' - HEX A DATASET INFORMATION CELL.'
HEXDSINF $IN ,
         MVC   VVD0,=X'0000FF21'   DATASET INFORMATION CELL.       @134
         L     R15,=V(FINDVVDS)                                    @134
         BASR  R14,R15             SCAN VVDS                       @134
         LTR   R15,R15             WAS THERE ONE?                  @134
         BNZ   HEXDSF99            NO.                             @134
         USING VVRDSINF,R6
         MVC   L2TYPE,=CL7' DSINFO'
         HEX   L2WORK,VVRDSLEN,                                        X
               2,HEXTAB=TRHEX      CELL LENGTH.
         HEX   L2WORK+5,VVRDSTYP,                                      X
               1,HEXTAB=TRHEX      TYPE CODE IS X'21'
         HEX   L2WORK+8,VVRATTR1,                                      X
               1,HEXTAB=TRHEX      DATASET ATTRIBUTES
         HEX   L2WORK+11,VVRATTR2,                                     X
               1,HEXTAB=TRHEX      DATASET ATTRIBUTES
         HEX   L2WORK+14,VVROPIND,                                     X
               1,HEXTAB=TRHEX      OPEN INDICATOR
         HEX   L2WORK+17,VVRBUFSZ,                                     X
               4,HEXTAB=TRHEX      MINIMUM BUFFER SIZE
         HEX   L2WORK+26,VVRPRISP,                                     X
               3,HEXTAB=TRHEX      PRIMARY SPACE ALLOCATION
         HEX   L2WORK+33,VVRSECSP,                                     X
               3,HEXTAB=TRHEX      SECONDARY SPACE ALLOCATION
         HEX   L2WORK+40,VVRSPCFG,                                     X
               1,HEXTAB=TRHEX      SPACE FLAGS
         HEX   L2WORK+43,VVRDSHU,                                      X
               4,HEXTAB=TRHEX      DATASET HIGH USED RBA
         HEX   L2WORK+52,VVRDSHA,                                      X
               4,HEXTAB=TRHEX      DATASET HIGH ALLOCATED RBA
         HEX   L2WORK+61,VVRLRECL,                                     X
               4,HEXTAB=TRHEX      AVERAGE LOGICAL RECORD LENGTH
         HEX   L2WORK+70,VVREXCPX,                                     X
               4,HEXTAB=TRHEX      EXCEPTION EXIT.
         HEX   L2WORK+78,VVREXCPX+4,                                   X
               4,HEXTAB=TRHEX      EXCEPTION EXIT.
         HEX   L2WORK+87,VVRDSHK,                                      X
               4,HEXTAB=TRHEX      DATASET HIGH KEY RBA.
         HEX   L2WORK+96,VVRCLSFG,                                     X
               1,HEXTAB=TRHEX      CLUSTER ATTRIBUTE FLAG
         HEX   L2WORK+99,VVRAIXFG,                                     X
               1,HEXTAB=TRHEX      AIX ATTRIBUTE FLAG
         HEX   L2WORK+102,VVRTMSTP,                                    X
               4,HEXTAB=TRHEX      TIMESTAMP (CATALOG ONLY).
         HEX   L2WORK+110,VVRTMSTP+4,                                  X
               4,HEXTAB=TRHEX      TIMESTAMP (CATALOG ONLY).
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
HEXDSF99 $OUT  ,                   GET OUT
         TITLE ' - HEX AN AMDSB CELL.'
HEXAMDSB $IN ,
         MVC   VVD0,=X'0000FF60'   AMDSB CELL                      @134
         L     R15,=V(FINDVVDS)                                    @134
         BASR  R14,R15             SCAN VVDS                       @134
         LTR   R15,R15             WAS THERE ONE?                  @134
         BNZ   HEXAMD99            NO.                             @134
         USING VVRAMDCL,R6
         MVC   L2TYPE,=CL7' AMDSB'
         HEX   L2WORK+00,VVRAMDCN,                                     X
               2,HEXTAB=TRHEX      LENGTH OF AMDSB CELL
         HEX   L2WORK+05,VVRAMID,                                      X
               1,HEXTAB=TRHEX      TYPE CODE IS X'60'
         HEX   L2WORK+08,VVRAMATR,                                     X
               1,HEXTAB=TRHEX      ATTRIBUTES:
         HEX   L2WORK+11,VVRAMLEN,                                     X
               2,HEXTAB=TRHEX      LENGTH OF AMDSB
         HEX   L2WORK+16,VVRAMNST,                                     X
               2,HEXTAB=TRHEX      NUMBER OF ENTRIES IN INDEX SECTION
         HEX   L2WORK+21,VVRAMRKP,                                     X
               2,HEXTAB=TRHEX      RKP
         HEX   L2WORK+26,VVRAMKNL,                                     X
               2,HEXTAB=TRHEX      KEY LENGTH
         HEX   L2WORK+31,VVRAMPCA,                                     X
               1,HEXTAB=TRHEX      % FREE CI IN CA
         HEX   L2WORK+34,VVRAMPCI,                                     X
               1,HEXTAB=TRHEX      % FREE BYTES IN CI
         HEX   L2WORK+37,VVRAMCCA,                                     X
               2,HEXTAB=TRHEX      CI'S PER CA
         HEX   L2WORK+42,VVRAMFCA,                                     X
               2,HEXTAB=TRHEX      FREE CI'S PER CA
         HEX   L2WORK+47,VVRAMFCI,                                     X
               4,HEXTAB=TRHEX      FREE BYTES PER CI
         HEX   L2WORK+56,VVRAMCIV,                                     X
               4,HEXTAB=TRHEX      CONTROL INTERVAL SIZE
         HEX   L2WORK+65,VVRAMLCL,                                     X
               4,HEXTAB=TRHEX      MAXIMUM RECORD SIZE
         HEX   L2WORK+74,VVRAMSLT,                                     X
               4,HEXTAB=TRHEX      SLOTS PER CI
         HEX   L2WORK+83,VVRAMMRR,                                     X
               4,HEXTAB=TRHEX      MAXIMUM RELATIVE RECORD NUMBER
         HEX   L2WORK+92,VVRAMARB,                                     X
               4,HEXTAB=TRHEX      POINTER TO 1ST ARDB
         HEX   L2WORK+101,VVRAMAT3,                                    X
               1,HEXTAB=TRHEX      ATTRIBUTES
         HEX   L2WORK+104,VVRAMSNO,                                    X
               1,HEXTAB=TRHEX      NUMBER OF CONCURRENT REQUESTS
         HEX   L2WORK+107,VVRAMBFD,                                    X
               2,HEXTAB=TRHEX      NUMBER OF DATA BUFFERS
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         HEX   L2WORK+00,VVRAMSTS,                                     X
               4,HEXTAB=TRHEX      SYSTEM TIMESTAMP
         HEX   L2WORK+08,VVRAMSTS+4,                                   X
               4,HEXTAB=TRHEX      SYSTEM TIMESTAMP
         HEX   L2WORK+17,VVRAMNIL,                                     X
               2,HEXTAB=TRHEX      NUMBER OF INDEX LEVELS
         HEX   L2WORK+22,VVRAMNXT,                                     X
               2,HEXTAB=TRHEX      NUMBER OF EXTENTS
         HEX   L2WORK+27,VVRAMNLR,                                     X
               4,HEXTAB=TRHEX      NUMBER OF LOGICAL RECORDS
         HEX   L2WORK+38,VVRAMDLR,                                     X
               4,HEXTAB=TRHEX      NUMBER OF DELETED RECORDS
         HEX   L2WORK+47,VVRAMINR,                                     X
               4,HEXTAB=TRHEX      NUMBER OF INSERTED RECORDS
         HEX   L2WORK+56,VVRAMUPR,                                     X
               4,HEXTAB=TRHEX      NUMBER OF UPDATED RECORDS
         HEX   L2WORK+65,VVRAMRTR,                                     X
               4,HEXTAB=TRHEX      NUMBER OF RETRIEVED RECORDS
         HEX   L2WORK+74,VVRAMASP,                                     X
               4,HEXTAB=TRHEX      BYTES OF FREE SPACE IN DATASET
         HEX   L2WORK+83,VVRAMCIS,                                     X
               4,HEXTAB=TRHEX      NUMBER OF CI SPLITS
         HEX   L2WORK+92,VVRAMCAS,                                     X
               4,HEXTAB=TRHEX      NUMBER OF CA SPLITS
         HEX   L2WORK+101,VVRAMEXC,                                    X
               4,HEXTAB=TRHEX      NUMBER OF EXCPS
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
HEXAMD99 $OUT  ,                   GET OUT
         TITLE ' - HEX A VOLUME INFORMATION CELL.'
HEXVOLIN $IN ,
         MVC   VVD0,=X'0000FF23'   VOLUME INFORMATION CELL         @134
         L     R15,=V(FINDVVDS)                                    @134
         BASR  R14,R15             SCAN VVDS                       @134
         LTR   R15,R15             WAS THERE ONE?                  @134
         BNZ   HEXVLN99            NO.                             @134
         USING VVRVOLIN,R6
         MVC   L2TYPE,=CL7' VOLINF'
         HEX   L2WORK+00,VVRVOLLN,                                     X
               2,HEXTAB=TRHEX      LENGTH OF VOLUME CELL
         HEX   L2WORK+05,VVRVOLTP,                                     X
               1,HEXTAB=TRHEX      TYPE CODE IS X'23'
         HEX   L2WORK+08,VVRVOLFG,                                     X
               1,HEXTAB=TRHEX      VOLUME FLAGS
         HEX   L2WORK+11,VVRNOEXT,                                     X
               1,HEXTAB=TRHEX      NUMBER OF EXTENTS ON THIS VOLUME.
         HEX   L2WORK+14,VVRHKRBA,                                     X
               4,HEXTAB=TRHEX      HIGH KEY RBA
         HEX   L2WORK+23,VVRHURBA,                                     X
               4,HEXTAB=TRHEX      HIGH USED RBA
         HEX   L2WORK+32,VVRHARBA,                                     X
               4,HEXTAB=TRHEX      HIGH ALLOCATED RBA
         HEX   L2WORK+41,VVRBLKSZ,                                     X
               4,HEXTAB=TRHEX      BLOCK SIZE
         HEX   L2WORK+50,VVRBLKTK,                                     X
               2,HEXTAB=TRHEX      NUMBER OF BLOCKS PER TRACK
         HEX   L2WORK+55,VVRTRKAU,                                     X
               2,HEXTAB=TRHEX      NUMBER OF TRACKS PER ALLOCATION UNIT
         HEX   L2WORK+60,VVRTPEXT,                                     X
               1,HEXTAB=TRHEX      EXTENT TYPE FLAG
         HEX   L2WORK+63,VVRTKCYL,                                     X
               2,HEXTAB=TRHEX      TRACKS PER CYLINDER
         HEX   L2WORK+68,VVRBYTTK,                                     X
               4,HEXTAB=TRHEX      BYTES PER TRACK.
         HEX   L2WORK+77,VVRBYTAU,                                     X
               4,HEXTAB=TRHEX      BYTES PER ALLOCATION UNIT
         HEX   L2WORK+86,VVRLOKYL,                                     X
               2,HEXTAB=TRHEX      LOW KEY LENGTH
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         ST    R5,HEXR5            SAVE VVDSTAB BASE REG
         SR    R5,R5
         ICM   R5,1,VVRNOEXT       GET NUMBER OF EXTENTS
         LR    R8,R6
         LA    R8,40(0,R8)         POINT TO EXTENT DESCR.
         USING VVRXTENT,R8
HEXVLN97 HEX   L2WORK+00,VVRXSEQN,                                     X
               2,HEXTAB=TRHEX      SEQUENCE NUMBER
         HEX   L2WORK+05,VVRXSCH,                                      X
               4,HEXTAB=TRHEX      STARTING CCHH
         HEX   L2WORK+14,VVRXECH,                                      X
               4,HEXTAB=TRHEX      ENDING CCHH
         HEX   L2WORK+23,VVRXNTRK,                                     X
               2,HEXTAB=TRHEX      NUMBER OF TRACKS
         HEX   L2WORK+28,VVRXSRBA,                                     X
               4,HEXTAB=TRHEX      STARTING RBA
         HEX   L2WORK+37,VVRXERBA,                                     X
               4,HEXTAB=TRHEX      ENDING RBA
         LM    R0,R1,PLINE2        PARMS TO PRINT RPTLINE2
         L     R15,=V(PRINT)       PRINT SUBROUTINE                @134
         BASR  R9,R15              PRINT LINE                      @134
         LA    R8,20(0,R8)         POINT TO NEXT EXTENT DESCR.
         BCT   R5,HEXVLN97         FORMAT ALL EXTENTS
         L     R5,HEXR5            RESTORE VVDSTAB BASE REG
HEXVLN99 $OUT  ,                   GET OUT
HEXR5    DC    F'0'                I'M RUNNING OUT OF REGISTERS
         DROP  R8
         LTORG ,                                                   @134
