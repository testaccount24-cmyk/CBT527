         PRINT GEN
         COPY  $DOC
&NAME    SETC  'LISTICAT'
&VERSION SETC  '2.1.5'
         PUNCH ' SETCODE AC(1) '
LISTICAT AMODE 31
LISTICAT RMODE ANY
LISTICAT TITLE ' - LIST AN ICF CATALOG.'
         $REGS
LISTICAT $PROLOG R10,R11,R12
         LR    R6,R1               SAVE JCL PARM
         L     R4,=V(DATASECT)     COMMON DATA AREA
         USING DATASECT,R4
        $MESSAGE 1                                                 @122
         L     R15,=V(PARMS)       ADDRESS OF PARM DECODER.        @130
         BASR  R14,R15             GO TO IT.                       @130
         LR    R1,R6               RESTORE JCL PARM
         L     R1,0(0,R1)          GET PARM POINTER
         LH    R2,0(0,R1)          GET PARM SIZE
         LTR   R2,R2               ANY PARM GIVEN?
         BZ    NOPARM              NO, ASSUME LIST
         BCTR  R2,0                MAKE IT THE MACHINE LENGTH   15JAN88
         ST    R2,DSPFXL           SAVE PREFIX PARM LENGTH      15JAN88
         EX    R2,MOVEPFX          SAVE THE PARM PREFIX         15JAN88
         B     NOPARM                                           15JAN88
MOVEPFX  MVC   DSPFX(0),2(R1)      EXECUTED INSTRUCTION!        15JAN88
NOPARM   DS    0H
         TM    FLAGS1,DUMP         HEX LISTING WANTED?             @130
         BZ    NOTHEX              NO.                             @134
         L     R15,=V(HEXPRINT)    HEXPRINT ROUTINE                @134
         BR    R15                 GO THERE                        @134
NOTHEX   DS    0H                                                  @134
         XPROPEN PWA,                                                  X
               PAGELEN=PAGELEN,                                        X
               DDNAME=SYSPRINT     OPEN LISTING FILE.
         LTR   R15,R15             DID SYSPRINT OPEN?
         BNZ   EODICAT             IF NOT, NO REPORT.
         L     R15,=V(ALLVVDS)                                     @130
         BASR  R14,R15             ALLOCATE ALL VVDS'S             @130
         SPACE ,
*        LA    R1,AUTHREQ
*        LA    R15,3               INDICATE AUTHORIZATION ON.
*        SVC   252                 ***** INSTALLATION DEPENDANT ******
         SPACE ,
         L     R2,CVTPTR           A(CVT)
         L     R2,0(0,R2)          TCB WORDS
         L     R2,0(0,R2)          MY TCB.
         USING TCB,R2
         L     R2,TCBJSCB          TCB -> JSCB.
         DROP  R2
         USING IEZJSCB,R2
         L     R2,JSCBACT          ACTIVE JSCB.
         MODESET KEY=ZERO          JSCB IS IN KEY ZERO.
         SPACE ,
*
* OPENING A CATALOG AS A DATASET SEEMS TO CAUSE PASSWORD PROMPTING
* EVEN FOR READING. HERE I SET THE BYPASS PASSWORD BIT TO GIVE OPER
* A BREAK.
*
         OI    JSCBSWT1,JSCBPASS   SAY, NO PASSWORDS PLEASE.
         SPACE ,
         MODESET KEY=NZERO         BACK TO USER KEY.
         OPEN  ACBICAT             OPEN THE BCS CLUSTER.
         LTR   R15,R15             DID IT OPEN?
         BZ    OPENOK              YES.
         SHOWCB  ACB=ACBICAT,                                          X
               AREA=OPENERR,                                           X
               LENGTH=4,                                               X
               FIELDS=(ERROR)      STORE OPEN ERROR CODE.
         L     R3,OPENERR          PICK ERROR CODE.
         ABEND 14,DUMP             AND DIE.
OPENOK   MODESET KEY=ZERO          KEY ZERO TO MODIFY JSCB.
         NI    JSCBSWT1,255-JSCBPASS  BYPASS PASSWORD OFF.
         MODESET KEY=NZERO         BACK TO USER KEY.
         DROP  R2
*        LA    R1,AUTHREQ
*        LA    R15,4               INDICATE AUTHORIZATION OFF.
*        SVC   252                 ***** INSTALLATION DEPENDANT. *****
         BAS   R9,GENRPL           GENERATE RPL FOR BCS.           @120
         L     R0,=A(DSEXTL)       LENGTH OF EXTENT TABLE
         GETMAIN R,LV=(0)          ACQUIRE THE STORAGE
         ST    R1,DSEXTAD          STORE ADDRESS OF EXTENT TABLE
         TITLE ' - READ BCS RECORDS AND SCAN FOR CELL TYPES.'
GETNEXT  L     R1,RPLICAT          PICK UP RPL ADDRESS.
         GET   RPL=(1)             READ A BCS RECORD.
         AP    BCSGETS,ONE         KEEP TRACK OF GETS ISSUED.
         LTR   R15,R15             RECORD READ OK?
         BZ    GETOK               GO PROCESS IT.
         ABEND 15,DUMP             TOO BAD!
GETOK    L     R3,BUFPTR           ADDR OF CATALOG RECORD
         L     R1,RPLICAT          ADDR OF BCS RPL.
         L     R1,48(0,R1)         LENGTH OF RECORD READ
         AR    R1,R3               POINT TO END OF CATALOG RECORD
         ST    R1,ENDBCS           SAVE END OF RECORD.
         LA    R3,2(,R3)           SKIP OVER PREFIX
NEXTCELL CLI   2(R3),C'A'          A = NONVSAM
         BE    NONVSAM
         CLI   2(R3),C'C'          C = CLUSTER
         BE    CLUSTER
         CLI   2(R3),C'D'          D = DATA
         BE    DATA
         CLI   2(R3),C'I'          I = INDEX
         BE    INDEX
         CLI   2(R3),C'B'          B = GDG BASE
         BE    GDGBASE
         CLI   2(R3),X'05'         X'05' = GDG AGING TABLE      16DEC86
         BE    GDGAGE                                           16DEC86
         CLI   2(R3),C'H'          H = GDG ENTRY
         BE    GDGENT
         CLI   2(R3),C'G'          G = ALTERNATE INDEX
         BE    AIX
         CLI   2(R3),C'R'          R = PATH
         BE    PATH
         CLI   2(R3),X'04'         X'04' = VOLUME CELL          13JAN88
         BE    VOLCEL                                           13JAN88
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
ENDCELL  XC    BLKSIZE,BLKSIZE     RESET BLKSIZE
         XC    LRECL,LRECL         RESET LRECL
         XC    TRACKS,TRACKS       RESET TRACKS.
         XC    EXTENTS,EXTENTS     RESET EXTENTS
         XC    CREDT,CREDT         RESET CREATION DATE
         XC    EXPDT,EXPDT         RESET EXPIRATION DATE
         XC    REFDT,REFDT         RESET REFERENCED DATE
         SR    R1,R1               CLEAR REGISTER.
         ICM   R1,3,0(R3)          PICK UP CELL LENGTH
         LTR   R1,R1                                               @AVV
         BNP   GETNEXT            SKIP ZERO LENGTH CELL (?)        @AVV
         AR    R3,R1               POINT TO NEXT CELL
         C     R3,ENDBCS           ANY MORE CELLS IN THIS RECORD?
         BL    NEXTCELL            YES, KEEP GOING
         B     GETNEXT             READ ANOTHER RECORD.
EODICAT  EQU   *                   LAST BCS RECORD READ.
         CLOSE ACBICAT
         CLI   MCDSOPEN,255        DID WE OPEN THE MCDS?           @122
         BNE   EODICAT1            NO.                             @122
         CLOSE ACBMCDS             IF OPEN, CLOSE IT.              @122
EODICAT1 DS    0H                                                  @122
         BAS   R9,COUNTS           PRINT THE STATS.
         XPRCLOSE  PWA             CLOSE THE PRINT FILE.
        $MESSAGE 0                                                 @122
         $EPILOG ,                 AND GO HOME.
         TITLE ' - LIST A NONVSAM RECORD.'
         USING NVNC,R3
NONVSAM  AP    CNTNVSAM,ONE        COUNT OFF A NONVSAM.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   NONVSAM1            NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
         MVI   BASESW,0            SWITCH OFF.
NONVSAM1 MVC   L1DSNAME,NVNAME     SETUP DSNAME
         MVC   COMPNAME,NVNAME     SETUP DSNAME
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,NONVSAML,ENDCELL       @130
NONVSAML DS    0H                                                  @130
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,NONVSAMN    @130
NONVSAMN DS    0H                                                  @130
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    NONVCON2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    NONVCON1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTNVSAM,ONE        NO MATCH, DON'T PUT IN COUNT 15JAN88
         B     NONVCON2            CONTINUE PROCESS             15JAN88
NONVCON1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
NONVCON2 EQU   *                                                15JAN88
         MVC   L1TYPE,=C'NVS'      SAY WHAT TYPE IT IS.
         DROP  R3
         ICM   R0,1,=XL1'01'       OWNER CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         USING OWNERC,R3
         MVC   CREDT,OWNCREDT      STORE CREATION DATE
         MVC   EXPDT,OWNEXPDT      STORE EXPIRATION DATE
         DROP  R3
         ICM   R0,1,=XL1'04'       VOLUME CELL TO BE FOUND
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         MVI   VOLSW,255           TURN ON VOL CELL JUST READ   13JAN88
         USING VOLCELL,R3
         MVC   VOLTYP,VOLDEVTP     SAVE DEVICE TYPE
         MVC   L1VOLUME,VOLSERN    SETUP VOLUME SERIAL NUMBER
         CLC   VOLSERN,=C'******'  SYSTEM SYMBOLIC?
         BE    NONVSAM0            YES
         CLI   VOLSERN,C'&&'       SYSTEM SYMBOLIC?
         BNE   NONVSAM2            NO
NONVSAM0 EQU   *
         BAS   R9,SYMLOOK
NONVSAM2 EQU   *
        $TEST  FLAGS2,VOLUME,VTAB,L1VOLUME,7,NONVSAMV,ENDCELL      @130
NONVSAMV DS    0H                                                  @130
        $TEST  FLAGS2,NOVOLUME,NVTAB,L1VOLUME,7,ENDCELL,NONVSAMX   @130
NONVSAMX DS    0H                                                  @130
         MVC   L1UNIT,=C'??????'   CALL IT ???? IF UNIT NOT FOUND.
         LA    R5,DEVCDTBL         DEVICE TYPE TABLE.
NONVSAM3 CLC   VOLTYP,0(R5)        IS THIS IT
         BE    NONVSAM4            YES. GO GET DEVICE TYPE.
         LA    R5,12(,R5)          NEXT DEVICE ENTRY
         CLC   0(2,R5),=XL2'FFFF'  END OF TABLE
         BNE   NONVSAM3            LEAVE IT AT ????
         MVC   TRACKS,=XL4'FFFFFFFF' INVALID VOLUME DEVICE TYPE
         AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         B     NONVSAM5            CHECK NEXT DEVICE TYPE.
NONVSAM4 MVC   L1UNIT,4(R5)        SET UP DEVICE TYPE IN PRINT LINE
         SR    R1,R1               CLEAR A REGISTER.
         ICM   R1,3,10(R5)         TRACKS PER CYLINDER.
         ST    R1,TRKCYL           SAVE FOR LATER CALCULATION.
         TM    2(R5),X'20'         IS IT A DASD DEVICE?
         BZ    NONVSAM5            IF NOT, NO VTOC TO SEARCH.
         L     R15,=V(VTOC)                                        @134
         BASR  R14,R15             GET DSCB FIELDS.                @134
NONVSAM5 CLC   L1VOLUME,=C'MIGRAT' IS IT MIGRATED BY HSM
         BNE   NONVSAM6            IF NOT, SKIP MCDS CHECK.
         BAS   R9,CHKHSM           SETUP MCDS FIELDS.
NONVSAM6 L     R1,LRECL            PICK UP LRECL VALUE.
         CVD   R1,WORK             CONVERT LRECL TO PACKED
         $EDITP  L1LRECL,DWK3,ZZZZZ FORMAT IT NICELY
         L     R1,BLKSIZE          PICK UP BLOCK SIZE.
         CVD   R1,WORK             CONVERT BLKSIZE TO PACKED
         $EDITP  L1BLKSIZ,DWK3,ZZZZZ FORMAT IT NICELY
*  THE FULL WORD TRACKS IS BEING USED AS A INDICATOR FOR THE DATASET
*  BEING CATALOGED BUT NOT FOUND ON THE PACK THAT IT'S CATALOGED ON.
         CLC   TRACKS,=XL4'FFFFFFFF' IS THE DATAST NOT ON PACK  30NOV87
         BNE   NONVSAM7            IF WAS FOUND, BRANCH AROUND. 30NOV87
         XC    TRACKS,TRACKS       ELSE, CLEAR OUT TRACKS CTR.  30NOV87
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
NONVSAM7 EQU   *                                                30NOV87
         L     R1,TRACKS           PICK UP ALLOCATED TRACKS
         CVD   R1,WORK             CONVERT TRACKS TO PACKED
         $EDITP  L1TRACKS,                                             X
               DWK4,ZZZZZ          FORMAT IT NICELY.
         L     R1,EXTENTS          PICK UP ALLOCATED EXTENTS
         CVD   R1,WORK             CONVERT EXTENT TO PACKED
         $EDITP  L1XTNT,                                               X
               DWK2,ZZZ            FORMAT IT NICELY.
         BAS   R9,SETCREDT         FORMAT CREATION DATE.
         MVC   L2SUB2,L1SUB2
         MVI   L1SUB2,X'40'
         MVC   L1SUB2+1(L'L1SUB2-1),L1SUB2
         LM    R0,R1,BLNKLNE       PARMS TO PRINT BLANK LINE
         BAS   R9,PRINT            PRINT LINE DESCRIBING THIS DATASET.
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE DESCRIBING THIS DATASET.
         LM    R0,R1,PLINE2        PARMS TO PRINT LINE RPTLINE2
         BAS   R9,PRINT            PRINT LINE DESCRIBING THIS DATASET.
         B     ENDCELL             PROCESS NEXT BCS CELL.
         DROP  R3
         TITLE ' - LIST THE SECOND TO N-TH VOLUME CELLS'        13JAN88
         USING VOLCELL,R3                                       13JAN88
VOLCEL   EQU   *                                                13JAN88
         CLI   VOLSW,255           WAS VOL CELL IMMED. BEFORE   13JAN88
         BE    VOLCEL1        YES, PRINT THE CELL INFO          13JAN88
         B     ENDCELL        NO,  PROCESS NEXT BCS CELL.       13JAN88
VOLCEL1  MVC   L1VOLUME,VOLSERN    SETUP VOLUME SERIAL NUMBER   13JAN88
         MVC   L1UNIT,=C'??????'   CALL IT ???? IF UNIT NOT FOUND.
         MVC   VOLTYP,VOLDEVTP     SAVE DEVICE TYPE
         CLC   VOLSERN,=C'******'  SYSTEM SYMBOLIC?
         BE    VOLCEL0             YES
         CLI   VOLSERN,C'&&'       SYSTEM SYMBOLIC?
         BNE   VOLCELZ             NO
VOLCEL0  EQU   *                                                13JAN88
         BAS   R9,SYMLOOK          RESOLVE SYMBOLIC
VOLCELZ  LA    R5,DEVCDTBL         DEVICE TYPE TABLE.           13JAN88
VOLCEL2  CLC   VOLTYP,0(R5)        IS THIS IT                   13JAN88
         BE    VOLCEL3             YES. GO GET DEVICE TYPE.     13JAN88
         LA    R5,12(,R5)          NEXT DEVICE ENTRY            13JAN88
         CLC   0(2,R5),=XL2'FFFF'  END OF TABLE                 13JAN88
         BNE   VOLCEL2             CHECK NEXT DEVICE TYPE.      13JAN88
         MVC   TRACKS,=XL4'FFFFFFFF' INVALID DEVICE TYPE
         AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         B     VOLCEL4             LEAVE IT AT ????             13JAN88
VOLCEL3  MVC   L1UNIT,4(R5)    SET UP DEVICE TYPE IN PRINT LINE 13JAN88
VOLCEL4  MVI   VOLSW,255           TURN ON VOL CELL JUST READ   13JAN88
         CLC   VOLSERN,=C'*     '  FUTURE VOLUME?
         BE    VOLCEL7
         SR    R1,R1               CLEAR A REGISTER.
         ICM   R1,3,10(R5)         TRACKS PER CYLINDER.
         ST    R1,TRKCYL           SAVE FOR LATER CALCULATION.
         TM    2(R5),X'20'         IS IT A DASD DEVICE?
         BZ    VOLCEL5             IF NOT, NO VTOC TO SEARCH.
         L     R15,=V(VTOC)                                        @134
         BASR  R14,R15             GET DSCB FIELDS.                @134
VOLCEL5  CLC   L1VOLUME,=C'MIGRAT' IS IT MIGRATED BY HSM
         BNE   VOLCEL6             IF NOT, SKIP MCDS CHECK.
         BAS   R9,CHKHSM           SETUP MCDS FIELDS.
VOLCEL6  EQU   *
*  THE FULL WORD TRACKS IS BEING USED AS A INDICATOR FOR THE DATASET
*  BEING CATALOGED BUT NOT FOUND ON THE PACK THAT IT'S CATALOGED ON.
         CLC   TRACKS,=XL4'FFFFFFFF' IS THE DATAST NOT ON PACK  30NOV87
         BNE   VOLCEL7             IF WAS FOUND, BRANCH AROUND. 30NOV87
         XC    TRACKS,TRACKS       ELSE, CLEAR OUT TRACKS CTR.  30NOV87
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
VOLCEL7  EQU   *                                                30NOV87
         L     R1,TRACKS           PICK UP ALLOCATED TRACKS
         CVD   R1,WORK             CONVERT TRACKS TO PACKED
         $EDITP  L1TRACKS,                                             X
               DWK4,ZZZZZ          FORMAT IT NICELY.
         L     R1,EXTENTS          PICK UP ALLOCATED EXTENTS
         CVD   R1,WORK             CONVERT EXTENT TO PACKED
         $EDITP  L1XTNT,                                               X
               DWK2,ZZZ            FORMAT IT NICELY.
         LM    R0,R1,PLINE2        PARMS TO PRINT LINE RPTLINE2
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT BCS CELL.       13JAN88
         DROP  R3                                               13JAN88
         TITLE ' - LIST A CLUSTER RECORD.'
         USING VCNC,R3
CLUSTER  AP    CNTCLUST,ONE        COUNT A CLUSTER.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   CLUSTER1            NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
         MVI   BASESW,0            SWITCH OFF.
CLUSTER1 DS    0H
         CLI   CLNAME,X'00'        DOES THE NAME START WITH X'00'
         BNE   MVWHOLE             NO MOVE THE REAL NAME
         MVC   L1DSNAME(23),=C'INDEXED CATALOG CLUSTER'   ELSE USE THIS
         B     MVCLUSTR            CONTINUE WITH CLUSTER ROUTINE
MVWHOLE  EQU   *
         MVC   L1DSNAME,CLNAME     SETUP CLUSTER NAME.
         MVC   COMPNAME,CLNAME     SETUP CLUSTER NAME.
MVCLUSTR EQU   *
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    CLSTCON2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    CLSTCON1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTCLUST,ONE        NOMATCH DON'T INCL IN COUNT  15JAN88
         B     CLSTCON2            CONTINUE PROCESS             15JAN88
CLSTCON1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
CLSTCON2 EQU   *                                                15JAN88
         MVC   L1TYPE,=C'CLS'      CALL IT A CLUSTER.
         CLI   FIRST,0             FIRST CLUSTER CELL?
         BNE   NOTCL00             NO
         MVI   FIRST,255           THAT WAS THE ONE.
         ST    R3,SAVECL           FIRST CLUSTER HAS BCS NAME.
GETBCSD  SR    R1,R1               CLEAR A FEW BYTES.
         ICM   R1,3,0(R3)          PICK UP CELL LENGTH
         AR    R3,R1               POINT TO NEXT CELL
         CLI   2(R3),C'D'          IS IT A DATA CELL?
         BNE   GETBCSD             KEEP ON LOOKING.
         DROP  R3
         USING DINC,R3
         SR    R1,R1                                               @121
         IC    R1,DIDKEYLN         GET LENGTH OF CATALOG NAME.     @121
         SH    R1,=H'2'            DROP TWO BYTES OF JUNK          @130
         B     *+10                                                @121
         MVC   CATNAME(0),DIDKEY   SETUP CATNAME IN HEADING.       @121
         EX    R1,*-6                                              @121
         BAS   R9,SETHEAD          DEFINE REPORT HEADING.
         L     R3,SAVECL           RESTORE CELL ADDR TO CLUSTER.
NOTCL00  EQU   *
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,CLUSTERL,ENDCELL       @130
CLUSTERL DS    0H                                                  @130
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,CLUSTERN    @130
CLUSTERN DS    0H                                                  @130
         LM    R0,R1,BLNKLNE       PARMS TO PRINT BLANK LINE
         BAS   R9,PRINT            PRINT LINE DESCRIBING THIS DATASET.
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT BCS CELL.
         DROP  R3
         USING DINC,R3
DATA     MVC   L1TYPE,=C'DAT'      DATA CELL (PARDON THE EXPRESSION)
         AP    CNTDATA,ONE         COUNT IT.
         B     SKIPDATA            GOTO COMMON FORMATTING LOGIC.
INDEX    MVC   L1TYPE,=C'IDX'      CALL IT AN INDEX
         AP    CNTINDEX,ONE        AND COUNT IT.
SKIPDATA SR    R1,R1               CLEAR A REGISTER.
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   COMPNAME,C' '
         MVC   COMPNAME+1(L'COMPNAME-1),COMPNAME
         IC    R1,DIDKEYLN         LENGTH OF INDEX/DATA NAME
         SH    R1,=H'2'            CORRECT LENGTH PLEASE           @130
         EX    R1,DIDMOVE          MOVE COMPONENT NAME FOR PRINT
         MVC   L1DSNAME,COMPNAME
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    CLSTRCN2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    CLSTRCN1            MATCH, TURN ON PRINT         15JAN88
         CLI   L1TYPE,C'D'         WAS IT DATA TYPE             15JAN88
         BNE   CLSTRCN3         NO,CHECK FOR INDEX              15JAN88
         SP    CNTDATA,ONE         DON'T INCLUDE IN COUNT       15JAN88
         B     CLSTRCN2            CONTINUE PROCESS             15JAN88
CLSTRCN3 CLI   L1TYPE,C'I'         WAS IT INDEX TYPE            15JAN88
         BNE   CLSTRCN2         NO,CONTINUE PROCESS             15JAN88
         SP    CNTINDEX,ONE        DON'T INCLUDE IN COUNT       15JAN88
         B     CLSTRCN2            CONTINUE PROCESS             15JAN88
CLSTRCN1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
CLSTRCN2 EQU   *                                                15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   CLUSTER2            NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
         MVI   BASESW,0            SWITCH OFF.
CLUSTER2 EQU   *
         DROP  R3
         ICM   R0,1,=XL1'01'       OWNER CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         USING OWNERC,R3
         MVC   CREDT,OWNCREDT
         MVC   EXPDT,OWNEXPDT
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,DATIDXL,ENDCELL        @130
DATIDXL  DS     0H                                                 @130
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,DATIDXN     @130
DATIDXN  DS     0H                                                 @130
         ICM   R0,1,=XL1'04'       VOLUME CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         MVI   VOLSW,255           TURN ON VOL CELL JUST READ   13JAN88
         DROP  R3
         USING VOLCELL,R3
         MVC   L1VOLUME,VOLSERN    SETUP VOLUME SERIAL NUMBER
         MVC   VOLTYP,VOLDEVTP     SAVE DEVICE TYPE
         CLC   VOLSERN,=C'******'  SYSTEM SYMBOLIC?
         BE    CLUSTER0            YES
         CLI   VOLSERN,C'&&'       SYSTEM SYMBOLIC?
         BNE   CLUSTERS            NO
CLUSTER0 EQU   *
         BAS   R9,SYMLOOK          RESOLVE SYMBOLIC
CLUSTERS EQU   *
        $TEST  FLAGS2,VOLUME,VTAB,L1VOLUME,7,CLUSTERV,ENDCELL      @130
CLUSTERV DS    0H                                                  @130
        $TEST  FLAGS2,NOVOLUME,NVTAB,L1VOLUME,7,ENDCELL,CLUSTERX   @130
CLUSTERX DS    0H                                                  @130
         MVC   L1UNIT,=C'??????'   CALL IT ???? IF UNIT NOT FOUND.
         LA    R5,DEVCDTBL         DEVICE TYPE TABLE.
CLUSTER3 CLC   VOLTYP,0(R5)        IS THIS IT?
         BE    CLUSTER4            YES
         LA    R5,12(,R5)          NEXT DEVICE ENTRY
         CLC   0(2,R5),=XL2'FFFF'  END OF TABLE
         BNE   CLUSTER3            TRY NEXT DEVICE TYPE.
         MVC   TRACKS,=XL4'FFFFFFFF' INVALID DEVICE TYPE
         AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         B     CLUSTER5            LEAVE IT ????
CLUSTER4 MVC   L1UNIT,4(R5)        SET UP DEVICE TYPE IN PRINT LINE
         SR    R1,R1               CLEAR A REGISTER.
         ICM   R1,3,10(R5)         TRACKS PER CYLINDER.
         ST    R1,TRKCYL           SAVE FOR LATER CALCULATION.
         CLC   VOLSERN,=C'*     '  FUTURE VOLUME?
         BE    CLUSTER5
         TM    2(R5),X'20'         IS IT A DASD DEVICE?
         BZ    CLUSTER5            IF NOT, NO VTOC TO SEARCH.
         L     R15,=V(VTOC)                                        @134
         BASR  R14,R15             GET DSCB FIELDS.                @134
CLUSTER5 EQU   *                                                30NOV87
         MVC   RBASAVE,VOLVVRBA    SAVE RBA OF CI CONTAINING VVR CELL.
         DROP  R3
         L     R5,VVDSTAD          GET VVDSTAB START ADDR
         USING VVDSTAB,R5
CLUSTER8 CLI   VVDSVOL,255         LAST ENTRY?
         BE    CLUSTERU            YES, OH WELL.
         CLC   VVDSVOL,L1VOLUME    IS THIS THE VVDS?
         BNE   CLUSTERY            NO, TRY AGAIN
         ICM   R1,15,VVDSRPL       STORE RPL ADDRESS
         ICM   R8,15,VVDSACB       GET ACB ADDRESS
         OPEN  ((8))               OPEN VVDS
         LTR   R15,R15             DID IT OPEN?                    @122
         BZ    CLUSTERZ            YES.                            @122
         AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
         B     CLUSTERY
CLUSTERZ DS    0H                                                  @122
         ICM   R1,15,RBASAVE       GET VVR RBA
         STCM  R1,15,VVDSARG       INSERT INTO ARG FIELD FOR RPL
         ICM   R8,15,VVDSRPL       PICK UP RPL ADDR
         POINT RPL=(8)             POSITION TO DESIRED RECORD
         GET   RPL=(8)             READ IN RECORD
         AP    VVDSGETS,ONE        KEEP A COUNT.
         LTR   R15,R15             RECORD READ OK?
         BNZ   CLUSTERT
         L     R6,VVDSBUF          ADDR OF CATALOG RECORD
         L     R1,VVDSRPL          GET ADDR OF RPL
         L     R1,48(0,R1)         LENGTH OF RECORD READ
         AR    R1,R6               POINT TO END OF CATALOG RECORD
         ST    R1,ENDVVD           SAVE END OF RECORD
         LA    R6,2(,R6)           SKIP OVER PREFIX
         L     R15,=V(VVDS)                                        @134
         BASR  R14,R15             PROCESS VVDS FIELDS.            @134
         C     R15,=F'8'           DID WE GET THEM?                @122
         BNE   CLUSTER6            YES.                            @122
CLUSTERT EQU   *
        $MESSAGE 4,DATA=COMPNAME                                   @122
         B     CLUSTER9            PRINT WHAT WE GOT.              @122
CLUSTER6 EQU   *
         ICM   R1,15,VVDSRPL       STORE RPL ADDRESS
         ICM   R8,15,VVDSACB       GET ACB ADDRESS
         CLOSE ((8))               CLOSE VVDS
         B     CLUSTER7            PRINT WHAT WE GOT
CLUSTERY LA    R5,VVDSTLEN(0,R5)   NEXT ENTRY
         B     CLUSTER8            TRY NEXT VVDS
CLUSTERU AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
         B     CLUSTER9
CLUSTER7 EQU   *
*  THE FULL WORD TRACKS IS BEING USED AS A INDICATOR FOR THE DATASET
*  BEING CATALOGED BUT NOT FOUND ON THE PACK THAT IT'S CATALOGED ON.
         CLC   TRACKS,=XL4'FFFFFFFF' IS THE DATAST NOT ON PACK  30NOV87
         BNE   CLUSTERA            IF WAS FOUND, BRANCH AROUND. 30NOV87
         XC    TRACKS,TRACKS       ELSE, CLEAR OUT TRACKS CTR.  30NOV87
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
CLUSTERA EQU   *
         L     R1,LRECL            PICK UP LOGICAL RECORD LENGTH.
         CVD   R1,WORK             CONVERT LRECL TO PACKED
         $EDITP  L1LRECL,DWK3,ZZZZZ FORMAT IT NICELY
         L     R1,BLKSIZE          GET PHYSICAL BLOCK LENGTH.
         CVD   R1,WORK             CONVERT BLKSIZE TO PACKED
         $EDITP  L1BLKSIZ,                                             X
               DWK3,ZZZZZ          FORMAT IT NICELY.
         L     R1,TRACKS           PICK UP ALLOCATED TRACKS.
         CVD   R1,WORK             CONVERT TRACKS TO PACKED
         $EDITP  L1TRACKS,                                             X
               DWK4,ZZZZZ          FORMAT IT NICELY.
         L     R1,EXTENTS          PICK UP ALLOCATED EXTENTS
         CVD   R1,WORK             CONVERT EXTENT TO PACKED
         $EDITP  L1XTNT,                                               X
               DWK2,ZZZ            FORMAT IT NICELY.
CLUSTER9 DS    0H                                                  @122
         BAS   R9,SETCREDT         FORMAT CREATION DATE.
         MVC   L2SUB2,L1SUB2
         MVI   L1SUB2,X'40'
         MVC   L1SUB2+1(L'L1SUB2-1),L1SUB2
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         LM    R0,R1,PLINE2        PARMS TO PRINT LINE RPTLINE2
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT BCS CELL.
         USING DINC,R3
DIDMOVE  MVC   COMPNAME(0),DIDKEY  -> (EXECUTED) <-
         DROP  R3
         TITLE ' - LIST AN ALTERNATE INDEX RECORD.'
         USING ANC,R3
AIX      AP    CNTAIX,ONE          COUNT AN AIX ENTRY.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   AIX0                NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
         MVI   BASESW,0            SWITCH OFF.
AIX0     MVC   L1TYPE,=C'AIX'      CALL IT AN AIX.
         SR    R1,R1               CLEAR A REGISTER.
         MVI   COMPNAME,C' '
         MVC   COMPNAME+1(L'COMPNAME-1),COMPNAME
         ICM   R1,1,AIXKEYLN       PICK UP AIX NAME LENGTH
         SH    R1,=H'2'            CORRECT LENGTH.                 @130
         B     AIX1                BRANCH AROUND EXECUTED INSTRUCTION.
         MVC   COMPNAME(0),AIXKEY  EXECUTED
AIX1     EX    R1,*-6              MOVE AIX NAME TO PRINT LINE.
         MVC   L1DSNAME,COMPNAME
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,AIXENTL,ENDCELL        @130
AIXENTL DS     0H                                                  @130
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,AIXENTN     @130
AIXENTN DS     0H                                                  @130
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    AIXCONT2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    AIXCONT1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTAIX,ONE          DON'T INCLUDE IN COUNT       15JAN88
         B     AIXCONT2            CONTINUE PROCESS             15JAN88
AIXCONT1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
AIXCONT2 EQU   *                                                15JAN88
         HEX   RPTLINE1+75,                                            X
               ANC,7,HEXTAB=TRHEX  HEX TRANSLATE AIX CELL CONTENTS.
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT CELL.
         TITLE ' - LIST A PATH RECORD.'
         USING PNC,R3
PATH     AP    CNTPATH,ONE         COUNT A PATH CELL.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   PATH0               NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
         MVI   BASESW,0            SWITCH OFF.
PATH0    MVC   L1TYPE,=C'PTH'      CALL IT A PATH.
         MVI   COMPNAME,C' '
         MVC   COMPNAME+1(L'COMPNAME-1),COMPNAME
         SR    R1,R1               CLEAR A REGISTER.
         ICM   R1,1,PATHKYLN       PICK UP PATH NAME LENGTH
         SH    R1,=H'2'            CORRECT LENGTH                  @130
         B     PATH1               BRANCH AROUND EXECUTED INSTRUCTION.
         MVC   COMPNAME(0),PATHNAME  EXECUTED
PATH1    EX    R1,*-6              MOVE PATH NAME TO PRINT LINE.
         MVC   L1DSNAME,COMPNAME
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,PTHENTL,ENDCELL        @130
PTHENTL DS     0H                                                  @130
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,PTHENTN     @130
PTHENTN DS     0H                                                  @130
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    PATHCNT2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    PATHCNT1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTPATH,ONE         DON'T INCLUDE IN COUNT       15JAN88
         B     PATHCNT2            CONTINUE PROCESS             15JAN88
PATHCNT1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
PATHCNT2 EQU   *                                                15JAN88
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT CELL.
         TITLE ' - LIST A GDG BASE OR GDG ENTRY RECORD.'
         USING GDGNC,R3
GDGBASE  AP    CNTGDGB,ONE         COUNT A BASE.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          WAS A GDGBASE JUST BEFORE THIS.
         BNE   GDGBASE1            NO.
         AP    CNTNOENT,ONE        COUNT A GDGBASE WITH NO ENTRIES.
GDGBASE1 MVI   BASESW,255          IDENTIFY GDGBASE.
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,GDGBASEL,ENDCELL       @134
GDGBASEL DS    0H                                                  @134
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,GDGBASEN    @134
GDGBASEN DS    0H                                                  @134
         MVC   L1TYPE,=C'GDB'      IDENTIFY RECORD TYPE
         MVC   L1DSNAME,GDGNAME    SETUP GDGNAME.
         MVC   COMPNAME,GDGNAME    SETUP GDGNAME.
         MVC   GDGSAVE,GDGNAME     SAVE GDGNAME.
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    GDGBCNT2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BE    GDGBCNT1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTGDGB,ONE         DON'T INCLUDE IN COUNT       15JAN88
         B     GDGBCNT2            CONTINUE PROCESS             15JAN88
GDGBCNT1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
GDGBCNT2 EQU   *                                                15JAN88
         DROP  R3
         ICM   R0,1,=XL1'01'       OWNER CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         USING OWNERC,R3
         MVC   CREDT,OWNCREDT      SET UP CREATION DATE
         MVC   EXPDT,OWNEXPDT      SET UP EXPIRATION DATE
         BAS   R9,SETCREDT         FORMAT CREATION DATE.
*
* THE FOLLOWING HAVE BEEN TAKEN OUT FOR LOCAL DEUTZ-ALLIS       16DEC86
*  MODIFICATION TO GIVE GDG AGING INFORMATION ON THE REPORT     16DEC86
*                                                               16DEC86
*        LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1 16DEC86
*        BAS   R9,PRINT            PRINT LINE.                  16DEC86
*                                                               16DEC86
         B     ENDCELL             PROCESS NEXT CELL.
         DROP  R3
         USING GATC,R3
GDGAGE   EQU   *                    GDG AGING CELL ROUTINE      16DEC86
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,GDGAGEL1,ENDCELL       @134
GDGAGEL1 DS    0H                                                  @134
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,GDGAGEN1    @134
GDGAGEN1 DS    0H                                                  @134
         MVC   L1GDGSCR,=CL9'SCRATCH  '  MOVE SCRATCH TO PRINT  16DEC86
         TM    GATATTR,GATSCRTH        IS ATTRIBUTE "SCRATCH"?  16DEC86
         BO    GDGAGE1                YES, PRINT ALREADY MOVED  16DEC86
         MVC   L1GDGSCR,=CL9'NOSCRATCH'  ELSE, MOVE NOSCRATCH   16DEC86
GDGAGE1  MVC   L1GDGEMP,=CL7'EMPTY  '  MOVE EMPTY TO PRINT LINE 16DEC86
         TM    GATATTR,GATDELET        IS ATTRIBUTE "EMPTY"?    16DEC86
         BO    GDGAGE2                YES, PRINT ALREADY MOVED  16DEC86
         MVC   L1GDGEMP,=CL7'NOEMPTY'  ELSE, MOVE NOEMPTY       16DEC86
GDGAGE2  SR    R8,R8                  ZERO THE REGISTER         16DEC86
         ICM   R8,1,GATLIMIT          INSERT # MAX GDGS IN REG  16DEC86
         CVD   R8,WORK                CONVERT IT TO DECIMAL     16DEC86
         $EDITP  L1GDGMAX,DWK2,ZZZZ   FORMAT NICE FOR PRINT     16DEC86
         CLC   GATCNT,=BL1'00'     NO GENERATIONS IN GDG?       09DEC87
         BNE   GDGAGE3             NUMBER OF ENTRIES NOT ZERO.  09DEC87
         MVI   L1DSNAME+45,C'+'    OTHERWISE MARK WITH A + SIGN 09DEC87
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN   15JAN88
         BE    GDGAGE2A         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD LENGTH OF PREFIX        15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         BNE   GDGAGE3        YES, DON'T ADD TO COUNT           15JAN88
GDGAGE2A AP    CNTNOENT,ONE    COUNT A GDGBASE WITH NO ENTRIES. 09DEC87
GDGAGE3  LM    R0,R1,BLNKLNE       PARMS TO PRINT BLANK LINE
         BAS   R9,PRINT            PRINT LINE DESCRIBING THIS DATASET.
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         LM    R0,R1,PLINE2        PARMS TO PRINT LINE RPTLINE2 16DEC86
         BAS   R9,PRINT            PRINT LINE.                  16DEC86
         B     ENDCELL             PROCESS NEXT CELL            16DEC86
         DROP  R3                                               16DEC86
         USING GDSNC,R3
GDGENT   AP    CNTGDGE,ONE         COUNT IT.
         MVI   VOLSW,0             SWITCH OFF                   13JAN88
         MVI   PFXSW,0             SWITCH OFF                   15JAN88
         CLI   BASESW,255          PRECEEDED BY GDGBASE?
         BNE   GDGENT0             ???????
         MVI   BASESW,0            SWITCH OFF
GDGENT0  MVC   L1TYPE,=C'GDG'      IDENTIFY RECORD TYPE
         MVC   GDGWORK,GDGSAVE     START WITH BASE NAME.
         LA    R1,GDGWORK          GET ADDRESS OF BASE NAME
         LA    R8,44               44 BYTES AT MOST
GDGENT1  CLI   0(R1),C' '          SCAN FOR A BLANK
         BE    GDGENT2             YES.
         LA    R1,1(0,R1)          TRY NEXT CHARACTER.
         BCT   R8,GDGENT1          KEEP LOOKING
GDGENT2  SR    R8,R8               CLEAR A REGISTER.
         ICM   R8,3,GDSGENO        PICK UP GENERATION NUMBER.
         CVD   R8,GWORD            PACK IT.
         UNPK  2(4,R1),GWK3        UNPACK GENERATION NUMBER.
         OI    5(R1),X'F0'         FIX SIGN
         SR    R8,R8               CLEAR A REGISTER.
         ICM   R8,1,GDSVERNO       PICK UP VERSION NUMBER.
         CVD   R8,GWORD            PACK IT.
         UNPK  7(2,R1),GWK2        UNPACK VERSION NUMBER.
         OI    8(R1),X'F0'         FIX SIGN
         MVC   0(2,R1),=C'.G'      SET G0000
         MVI   6(R1),C'V'          G0000V00
         MVC   L1DSNAME,GDGWORK    MOVE IN DEVELOPED NAME
         MVC   COMPNAME,GDGWORK    MOVE IN DEVELOPED NAME
        $TEST  FLAGS1,LEVEL,LTAB,COMPNAME,9,GDGENTL1,ENDCELL       @134
GDGENTL1 DS    0H                                                  @134
        $TEST  FLAGS1,NOLEVEL,NLTAB,COMPNAME,9,ENDCELL,GDGENTN1    @134
GDGENTN1 DS    0H                                                  @134
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX GIVEN?  15JAN88
         BE    GDGECNT2         NO,CONTINUE AS NORMAL           15JAN88
         L     R9,DSPFXL           LOAD IN LENGTH OF PREFIX     15JAN88
         EX    R9,COMPDSN          COMPARE DSNAME TO PREFIX     15JAN88
         MVC   L1DSNAME,COMPNAME
         BE    GDGECNT1            MATCH, TURN ON PRINT         15JAN88
         SP    CNTGDGE,ONE         DON'T INCLUDE IN COUNT       15JAN88
         B     GDGECNT2            CONTINUE PROCESS             15JAN88
GDGECNT1 MVI   PFXSW,255           TURN ON PRINT SWITCH         15JAN88
GDGECNT2 EQU   *                                                15JAN88
         DROP  R3
         ICM   R0,1,=XL1'01'       OWNER CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         USING OWNERC,R3
         MVC   CREDT,OWNCREDT      SET UP CREATION DATE
         MVC   EXPDT,OWNEXPDT      SET UP EXPIRATION DATE
         DROP  R3
         ICM   R0,1,=XL1'04'       VOLUME CELL TO BE FOUND.
         BAS   R9,FINDBCS          SO GO LOOK FOR IT.
         MVI   VOLSW,255           TURN ON VOL CELL JUST READ   13JAN88
         USING VOLCELL,R3
         MVC   L1VOLUME,VOLSERN    SETUP VOLUME SERIAL NUMBER
         MVC   VOLTYP,VOLDEVTP     SAVE DEVICE TYPE
         CLC   VOLSERN,=C'******'  SYSTEM SYMBOLIC?
         BE    GDGENT3             YES
         CLI   VOLSERN,C'&&'       SYSTEM SYMBOLIC?
         BNE   GDGENTU             NO
GDGENT3  EQU   *
         BAS   R9,SYMLOOK          RESOLVE SYMBOLIC
GDGENTU  EQU   *
        $TEST  FLAGS2,VOLUME,VTAB,L1VOLUME,7,GDGENTV,ENDCELL       @130
GDGENTV DS     0H                                                  @130
        $TEST  FLAGS2,NOVOLUME,NVTAB,L1VOLUME,7,ENDCELL,GDGENTX    @130
GDGENTX DS     0H                                                  @130
         MVC   L1UNIT,=C'??????'   CALL IT ???? IF UNIT NOT FOUND.
         LA    R5,DEVCDTBL         DEVICE TYPE TABLE.
GDGENT5  CLC   VOLTYP,0(R5)        IS THIS IT
         BE    GDGENT6             GO TO SET IT UP.
         LA    R5,12(,R5)          NEXT DEVICE ENTRY
         CLC   0(2,R5),=XL2'FFFF'  END OF TABLE
         BNE   GDGENT5             NO, TRY NEXT DEVICE ENTRY.
         MVC   TRACKS,=XL4'FFFFFFFF' IS THE DATAST NOT ON PACK  30NOV87
         AP    CNTNF,ONE
        $MESSAGE 7,DATA=COMPNAME
         B     GDGENT7             YES, LEAVE IT AT ????
GDGENT6  MVC   L1UNIT,4(R5)        SET UP DEVICE TYPE IN PRINT LINE
         SR    R1,R1
         ICM   R1,3,10(R5)         TRACKS PER CYLINDER.
         ST    R1,TRKCYL           SAVE FOR LATER CALCULATION.
         TM    2(R5),X'20'         IS IT A DASD DEVICE.
         BZ    GDGENT7             IF NOT, NO VTOC TO SEARCH.
         CLC   VOLSERN,=C'*     '  FUTURE VOLUME?
         BE    GDGENT7             YES
         L     R15,=V(VTOC)                                        @134
         BASR  R14,R15             GET DSCB FIELDS                 @134
GDGENT7  CLC   L1VOLUME,=C'MIGRAT'  IS IT MIGRATED BY HSM?
         BNE   GDGENTZ             IF NOT, SKIP MCDS CHECK.
         BAS   R9,CHKHSM           SETUP MCDS FIELDS.
GDGENTZ  EQU   *
*  THE FULL WORD TRACKS IS BEING USED AS A INDICATOR FOR THE DATASET
*  BEING CATALOGED BUT NOT FOUND ON THE PACK THAT IT'S CATALOGED ON.
         CLC   TRACKS,=XL4'FFFFFFFF' IS THE DATAST NOT ON PACK  30NOV87
         BNE   GDGENT8             IT WAS FOUND, BRANCH AROUND. 30NOV87
         XC    TRACKS,TRACKS       ELSE, CLEAR OUT TRACKS CTR.  30NOV87
         MVI   L1DSNAME+45,C'*'    HILITE DATASET IN LISTING.   30NOV87
GDGENT8  EQU   *
         L     R1,LRECL            PICK UP LOGICAL RECORD LENGTH
         CVD   R1,WORK             CONVERT LRECL TO PACKED
         $EDITP  L1LRECL,DWK3,ZZZZZ FORMAT IT NICELY
         L     R1,BLKSIZE          PICK UP BLOCK SIZE.
         CVD   R1,WORK             CONVERT BLKSIZE TO PACKED
         $EDITP  L1BLKSIZ,                                             X
               DWK3,ZZZZZ          FORMAT WITH ZERO SUPPRESSION.
         L     R1,TRACKS           PICK UP ALLOCATED TRACKS.
         CVD   R1,WORK             CONVERT TRACKS TO PACKED
         $EDITP  L1TRACKS,                                             X
               DWK4,ZZZZZ          MAKE IT PRINTABLE.
         L     R1,EXTENTS          PICK UP ALLOCATED EXTENTS
         CVD   R1,WORK             CONVERT EXTENT TO PACKED
         $EDITP  L1XTNT,                                               X
               DWK2,ZZZ            FORMAT IT NICELY.
         BAS   R9,SETCREDT         FORMAT CREATION DATE.
         LM    R0,R1,PLINE1        PARMS TO PRINT LINE RPTLINE1
         BAS   R9,PRINT            PRINT LINE.
         LM    R0,R1,PLINE2        PARMS TO PRINT LINE RPTLINE2
         BAS   R9,PRINT            PRINT LINE.
         B     ENDCELL             PROCESS NEXT BCS CELL.
         TITLE ' - FINDBCS. ADVANCE R3 TO A SPECIFIED BCS CELL.'
* I ENTER HERE WITH R3 POINTING TO A CELL I HAVE JUST PROCESSED. THIS
* CODE EITHER MOVES AHEAD TO THE NEXT CELL BE IT WHATEVER OR SEARCHES
* FOR A PARTICULAR CELL TYPE.
* ON ENTRY THE NEXT-TO-RIGHT-MOST BYTE OF R0 CONTAINS X'FF' IF THE
* CELL TYPE THE CALLER WANTS IS OPTIONAL (IT'S EITHER THE NEXT ONE OR
* IT'S NOT THERE AT ALL) OR X'00' IF THE DESIRED CELL TYPE IS REQUIRED
* BUT MAY NOT BE THE NEXT ONE.
* THE RIGHT-MOST BYTE OF R0 CONTAINS THE ID OF THE CELL TYPE THE
* CALLER WANTS.
* IF R0 IS ALL ZEROS THE CALLER JUST WANTS THE NEXT CELL.
* IF THE REQUESTED CELL TYPE WAS FOUND R0 IS CLEARED.
         ENTRY FINDBCS                                             @134
FINDBCS  $IN ,
         ST    R3,BCS2             SAVE CELL ADDRESS.
FINDBCS1 SR    R1,R1               CLEAR REGISTER
         ICM   R1,3,0(R3)          PICK UP LENGTH OF CURRENT CELL.
         AR    R3,R1               AND SKIP OVER IT.
         C     R3,ENDBCS           ANY MORE CELLS IN THIS RECORD?
         BL    FINDBCS2            YES.
         ST    R0,BCS0             SAVE CALLERS PARMS
         L     R1,RPLICAT          GET RPL ADDR.
         GET   RPL=(1)
         AP    BCSGETS,ONE         COUNT OFF A GET.
         L     R0,BCS0             RESTORE CALLERS PARMS
         LTR   R15,R15             RECORD READ OK?
         L     R3,BUFPTR           ADDRESS OF RECORD JUST READ.
         L     R1,RPLICAT          GET RPL ADDR.
         L     R1,48(0,R1)         RECORD LENGTH.
         AR    R1,R3               END OF RECORD.
         ST    R1,ENDBCS           SAVE FOR NEXT TIME.
         LA    R3,2(0,R3)          SKIP OVER PREFIX.
FINDBCS2 CLM   R0,1,2(R3)          CHECK FOR REQUESTED CELL TYPE
         BE    FINDBCS9            YES.
         CLM   R0,2,=XL1'FF'       IS THIS CELL TYPE OPTIONAL?
         BNE   FINDBCS1            NO, SO KEEP LOOKING.
         L     R3,BCS2             BACKUP TO WHERE WE STARTED.
         SR    R0,R0               LET HIM KNOW ABOUT IT.
FINDBCS9 $OUT  ,
BCS9     DC    F'0'                SAVE R9 IN HERE.
BCS2     DC    F'0'                SAVE R3 IN HERE.
BCS0     DC    F'0'                SAVE R0 IN HERE.
         TITLE ' - PRINT LINE SUBROUTINE.'
         ENTRY  PRINT                                              @134
PRINT    $IN ,
         ST    R1,PRINT1
         CLC   DSPFX(3),=C'   '        IS THERE DS PREFIX GIVEN 15JAN88
         BE    PRINT2              NO, CONTINUE A NORMAL        15JAN88
         CLI   PFXSW,255               IS THE PRINTIT SWITCH ON 15JAN88
         BNE   PRINT2A            YES, DON'T PRINT THE LINE.    15JAN88
PRINT2   EQU   *                                                15JAN88
         XPRNTLIN  PWA,TEXT=(R1),LENGTH=132,SPB=((R0)),SPA=1
PRINT2A  L     R1,PRINT1
         MVI   0(R1),C' '
         MVC   1(132,R1),0(R1)
         $OUT  ,
PRINT1   DC    F'0'
         TITLE ' - DEFINE REPORT HEADING.'
SETHEAD  $IN ,
         XPRHEAD PWA,LIST=(HEADER1,HEADER2,HEADER2A)
         $OUT
         TITLE ' - FORMAT THE CREATION DATE FROM AN OWNER CELL.'
SETCREDT $IN ,
         SR    R0,R0               CLEAR R0.
         ICM   R0,7,CREDT          PICK UP CREATION DATE.
         LTR   R0,R0
         BZ    SETCR1
         XC    DTWORK,DTWORK       CLEAR DOUBLE WORD
         ST    R0,DTWORK+4         STORE FOR DATE CONVERSION
         LA    R1,DTWORK           SETUP ADDRESS
         ST    R1,DTPARM           OF PACKED FIELD
         LA    R1,DTPARM           IN PARMLIST
         L     R15,=V(XDATEDIT)    ADDRESS OF DATE CONVERT ROUTINE
         BASR  R14,R15             CONVERT DATE
         MVC   L1CREDT,DTWORK      SETUP CONVERTED DATE
         SR    R0,R0               CLEAR R0.
SETCR1   EQU   *
         ICM   R0,7,EXPDT          PICK UP EXPIRATION DATE.
         LTR   R0,R0
         BZ    SETCR2
         XC    DTWORK,DTWORK       CLEAR DOUBLE WORD
         ST    R0,DTWORK+4         STORE FOR DATE CONVERSION
         LA    R1,DTWORK           SETUP ADDRESS
         ST    R1,DTPARM           OF PACKED FIELD
         LA    R1,DTPARM           IN PARMLIST
         L     R15,=V(XDATEDIT)    ADDRESS OF DATE CONVERT ROUTINE
         BASR  R14,R15             CONVERT DATE
         MVC   L1EXPDT,DTWORK      SETUP CONVERTED DATE
         SR    R0,R0               CLEAR R0.
SETCR2   EQU   *
         ICM   R0,7,REFDT          PICK UP CREATION DATE.
         LTR   R0,R0
         BZ    SETCR3
         XC    DTWORK,DTWORK       CLEAR DOUBLE WORD
         ST    R0,DTWORK+4         STORE FOR DATE CONVERSION
         LA    R1,DTWORK           SETUP ADDRESS
         ST    R1,DTPARM           OF PACKED FIELD
         LA    R1,DTPARM           IN PARMLIST
         L     R15,=V(XDATEDIT)    ADDRESS OF DATE CONVERT ROUTINE
         BASR  R14,R15             CONVERT DATE
         MVC   L1ACCDT,DTWORK      SETUP CONVERTED DATE
SETCR3   EQU   *
         $OUT
         TITLE ' - SETUP FIELDS FROM THE HSM MCD RECORD.'
CHKHSM   DS    0H
         CLI   MCDSOPEN,254        PREVIOUS OPEN FAILED?           @122
         BER   R9                  YES. GIVE UP HOPE.              @122
         CLI   MCDSOPEN,0          IS MCDS ALREADY OPEN?
         BNE   CHKHSM1A
         OPEN  (ACBMCDS)
         LTR   R15,R15             DID IT OPEN.                    @122
         BZ    CHKHSM1B            YES                             @122
        $MESSAGE 6                 NO. SAY SO.                     @122
         MVI   MCDSOPEN,254        FLAG NO SYSUT2.                 @122
         BR    R9                  AND GO HOME.                    @122
CHKHSM1B DS    0H                                                  @122
         MVI   MCDSOPEN,255        FLAG IT OPEN
CHKHSM1A MVC   MCDSKEY,COMPNAME    DSN AS MCDS KEY.
         GET   RPL=RPLMCDS
         LTR   R15,R15             RECORD READ OK?
         BNZR  R9                  RETURN
         L     R1,MCDSPTR          GET ADDRESS OF HSM MCD RECORD.
         USING MCDDSCT,R1
         CLI   MCHTYPE,X'00'       MIGRATED DATASET ENTRY?
         BNER  R9
         CLC   MCDSIZE,=F'32760'   DATA AND INDEX ENTRIES NO GOOD.
         BH    CHKHSM2             SO LEAVE THEM AT ZERO
         MVC   TRACKS,MCDSIZE      ORIGINAL SIZE IN TRACKS.
CHKHSM2  MVC   BLKSIZE+2(2),MCDBLKSZ  ORIGINAL BLOCK SIZE.
         MVC   CREDT,MCDDLC+1      SET UP CREATION DATE
         MVC   REFDT,MCDDLR+1      SET UP REFERENCED DATE
         DROP  R1
         BR    R9                  EXIT
SYMLOOK  $IN
         LA    R1,SYMBTBL
         USING SYMBP,R1
         XC    SYMBTBL(SYMBP_LEN),SYMBTBL
         MVC   WORK,VOLSERN
         CLI   VOLSERN,C'*'
         BNE   SYMLOOK1
         MVC   WORK,=C'&&SYSR1'
SYMLOOK1 EQU   *
         LA    R9,WORK
         LA    R9,0(R9)
         ST    R9,SYMBPPATTERN@    STORE THE SYMBOLIC VOLSER
         LA    R9,L'L1VOLUME
         LA    R9,0(R9)
         ST    R9,SYMBPPATTERNLENGTH  LENGTH OF THE SYMBOLIC
         ST    R9,SYMBTL             LENGTH OF THE RECEIVER
         LA    R9,SYMBTL
         LA    R9,0(R9)
         ST    R9,SYMBPTARGETLENGTH@ LENGTH OF THE RECEIVER
         LA    R9,L1VOLUME
         LA    R9,0(R9)
         ST    R9,SYMBPTARGET@     STORE THE RECEIVING FIELD
         LA    R9,FDBK
         LA    R9,0(R9)
         ST    R9,SYMBPRETURNCODE@ STORE THE RETURN INFO
         LINK  EP=ASASYMBM,MF=(E,SYMBTBL)
         DROP  R1
         LA    R9,UCBCOPY
         USING UCBOB,R9
         XC    UCBWORK,UCBWORK    CLEAR WORK AREA
         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=UCBCOPY,                X
               DYNAMIC=YES,RANGE=ALL,DEVCLASS=DASD,                    X
               VOLSER=L1VOLUME
         LTR   R15,R15            WAS A UCB RETURNED?
         BNZ   SYMLEND            NO, QUIT NOW
         MVC   VOLTYP,UCBTYP      SAVE DEVICE TYPE
         DROP  R9
SYMLEND  EQU   *
         $OUT
         TITLE ' - PRINT OUT STATISTICS AT EOD.'
COUNTS   $IN ,
         XPREJECT  PWA
         XPRHEAD PWA,LIST=(HEADER1)
         $EDITP  T1COUNT,CNTNVSAM,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1NVSAM),T1NVSAM
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=2,SPA=1
         $EDITP  T1COUNT,CNTCLUST,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1CLUST),T1CLUST
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTINDEX,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1INDEX),T1INDEX
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTDATA,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1DATA),T1DATA
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTAIX,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1AIX),T1AIX
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTPATH,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1PATH),T1PATH
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTGDGB,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1GDGB),T1GDGB
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTGDGE,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1GDGE),T1GDGE
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,BCSGETS,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1BCS),T1BCS
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,VVDSGETS,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1VVDS),T1VVDS
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTNF,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1NF),T1NF
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         $EDITP  T1COUNT,CNTNOENT,ZZZZZZ9
         MVI   T1TEXT,C' '
         MVC   T1TEXT+1(122),T1TEXT
         MVC   T1TEXT(L'T1NOENT),T1NOENT
         XPRNTLIN  PWA,TEXT=TOTAL+1,LENGTH=132,SPB=0,SPA=1
         CLC   DSPFX(3),=C'   '    WAS A DATASET PREFIX ENTERED 15JAN88
         BE    COUNTS1          NO,DON'T PRINT PARM LINE        15JAN88
         L     R9,DSPFXL           LOAD PARM LENGTH             15JAN88
         EX    R9,MVPARM           MOVE PARM TO PRINT LINE      15JAN88
         LA    R8,T1INPARM         POINT START OF OUTPUT AREA   15JAN88
         A     R9,=XL4'0000001'    BUMPUP TO GET CORRECT OFFSET 15JAN88
         AR    R8,R9               POINT TO MOVE AREA           15JAN88
         MVI   0(R8),C'"'          MOVE IN A DOUBLE QUOTE SIGN  15JAN88
         XPRNTLIN  PWA,TEXT=TOTAL1+1,LENGTH=132,SPB=2,SPA=1     15JAN88
COUNTS1  EQU   *                                                15JAN88
         $OUT
MVPARM   MVC   T1INPARM(0),DSPFX                                15JAN88
         SPACE
AUTHREQ  DC    C'AUTH'
TOTAL    DS    0CL133
         DC    CL1' '
T1COUNT  DC    CL7' '
         DC    CL1' '
T1TEXT   DC    CL124' '                                            @120
T1NVSAM  DC    C'NONVSAM ENTRIES FOUND.'
T1CLUST  DC    C'CLUSTER ENTRIES FOUND.'
T1INDEX  DC    C'INDEX ENTRIES FOUND.'
T1DATA   DC    C'DATA ENTRIES FOUND.'
T1AIX    DC    C'ALTERNATE INDEX ENTRIES FOUND.'
T1PATH   DC    C'PATH ENTRIES FOUND.'
T1GDGB   DC    C'GENERATION DATA GROUP BASES FOUND.'
T1GDGE   DC    C'GENERATION DATA GROUP ENTRIES FOUND.'
T1BCS    DC    C'GETS ISSUED AGAINST THE BASIC CATALOG STRUCTURE.'
T1VVDS   DC    C'GETS ISSUED AGAINST VVDS(S).'
T1NF     DC    C'DATASETS CATALOGUED BUT NOT FOUND. (MARKED WITH AN "*"-
                BEFORE DATASET TYPE)'
T1NOENT  DC    C'GENERATION DATA GROUP BASES FOUND WITH NO ENTRIES. (MA-
               RKED WITH A "+" BEFORE DATASET TYPE)'
TOTAL1   DS    0CL133
         DC    CL1' '
         DC    CL13'SEARCH FOR: "'
T1INPARM DC    CL119' '
PFXSW    DC    XL1'00'                                          15JAN88
COMPDSN  CLC   DSPFX(0),COMPNAME   EXECUTED COMMAND             15JAN88
         TITLE ' - GENERATE AN RPL TO ACCESS THE BCS CLUSTER.'
GENRPL   $IN ,                                                     @120
         L     R0,BUFLEN           LENGTH TO GETMAIN
         GETMAIN R,LV=(0)          INPUT BUFFER FOR BCS RECORDS.
         ST    R1,BUFPTR           SAVE ADDRESS OF RECORD BUFFER.
         GENCB BLK=RPL,                                                X
               ACB=(S,ACBICAT),                                        X
               AM=VSAM,                                                X
               AREA=(*,BUFPTR),                                        X
               AREALEN=131072,                                         X
               OPTCD=(KEY,SEQ,MVE)
         ST    R1,RPLICAT          SAVE GENERATED RPL ADDR.
         $OUT                                                      @120
         LTORG ,
         SPACE 2
         COPY  PRINT                                               @120
         COPY  VTOC                                                @134
         COPY  VVDS                                                @134
         COPY  FINDVVDS                                            @134
         COPY  MESSAGES                                            @122
         COPY  HEXPRINT                                            @134
         COPY  ALLVVDS                                             @130
         COPY  PARMS                                               @130
         COPY  DATASECT                                            @120
         COPY  DSECTS                                              @120
         END   LISTICAT
